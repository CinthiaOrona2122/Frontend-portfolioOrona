var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/About.html",[0,0.951]],["body/interfaces/About.html",[0,1.144,1,2.077,2,0.399,3,0.346,4,0.346,5,4.116,6,0.453,7,0.602,8,1.041,9,5.34,10,0.979,11,0.535,12,0.028,13,2.416,14,0.399,15,2.656,16,0.025,17,0.025]],["title/components/AboutComponent.html",[18,0.461,19,0.952]],["body/components/AboutComponent.html",[2,0.179,3,0.155,4,0.155,6,0.376,7,0.349,8,0.769,9,3.415,10,0.959,11,0.512,12,0.029,14,0.179,16,0.014,17,0.014,18,0.575,19,1.328,20,1.222,21,0.864,22,0.864,23,0.864,24,0.864,25,1.848,26,1.317,27,1.723,28,0.864,29,2.34,30,2.016,31,1.317,32,4.062,33,1.317,34,3.352,35,4.062,36,1.617,37,4.062,38,1.864,39,0.783,40,2.34,41,2.262,42,1.669,43,1.927,44,3.352,45,3.352,46,4.544,47,1.669,48,2.262,49,0.783,50,2.198,51,3.388,52,2.669,53,2.023,54,1.785,55,1.391,56,3.352,57,1.143,58,0.759,59,1.143,60,2.198,61,1.291,62,2.064,63,3.352,64,2.198,65,2.198,66,3.352,67,2.198,68,3.352,69,2.198,70,2.198,71,1.669,72,2.198,73,2.198,74,2.023,75,2.198,76,0.783,77,0.783,78,2.198,79,1.538,80,1.538,81,0.901,82,0.372,83,2.198,84,2.198,85,1.094,86,0.932,87,0.932,88,1.094,89,0.405,90,2.198,91,1.094,92,1.094,93,2.198,94,2.198,95,1.094,96,1.094,97,2.023,98,2.198,99,1.669,100,2.198,101,3.352,102,2.198,103,2.198,104,2.198,105,2.198,106,2.198,107,2.198,108,2.198,109,2.198,110,2.198,111,1.094,112,3.352,113,2.198,114,1.094,115,1.094,116,1.094,117,1.094,118,1.094,119,1.094,120,1.848,121,1.094,122,2.198,123,1.669,124,0.979,125,1.669,126,3.352,127,1.818,128,3.352,129,2.023,130,1.193,131,1.193,132,1.669,133,1.669,134,1.669,135,1.669,136,1.818,137,1.193,138,1.818,139,0.744,140,1.317,141,1.317,142,0.864,143,1.785,144,0.864,145,0.864,146,0.642,147,0.864,148,0.642,149,0.864,150,0.642,151,0.864,152,0.642,153,0.864,154,0.642,155,0.864,156,0.597,157,0.864,158,0.642,159,0.864,160,0.642,161,0.864,162,0.642,163,0.864,164,0.864,165,0.864]],["title/injectables/AboutService.html",[51,2.142,166,0.761]],["body/injectables/AboutService.html",[2,0.253,3,0.22,4,0.22,6,0.288,7,0.449,8,0.839,10,1.047,11,0.579,12,0.029,14,0.253,16,0.018,17,0.018,36,1.788,39,1.007,49,0.726,51,2.835,55,1.421,57,1.314,58,0.796,59,1.314,61,1.314,76,1.007,77,1.007,81,1.036,82,0.526,89,0.572,124,1.26,166,1.007,167,1.318,168,2.611,169,2.273,170,2.273,171,2.147,172,2.665,173,2.147,174,2.467,175,1.318,176,2.27,177,3.106,178,1.829,179,2.147,180,3.106,181,2.901,182,3.106,183,2.147,184,3.106,185,4.313,186,3.106,187,2.147,188,3.106,189,1.979,190,3.106,191,1.318,192,1.979,193,1.695,194,1.979,195,1.979,196,1.979,197,1.979,198,1.979,199,1.979,200,1.979,201,3.106,202,1.425,203,1.221,204,1.318,205,3.106,206,1.221,207,1.425,208,1.425,209,1.318,210,1.318,211,2.385,212,1.547,213,1.547,214,1.547,215,1.547,216,1.547,217,1.547,218,1.547]],["title/interfaces/Achievement.html",[0,0.761,219,1.938]],["body/interfaces/Achievement.html",[0,1.055,1,1.917,2,0.368,3,0.319,4,0.319,6,0.418,7,0.574,8,1.048,10,1.006,11,0.587,12,0.028,13,2.647,14,0.368,16,0.023,17,0.023,58,0.876,219,3.275,220,3.799,221,4.065,222,5.199,223,3.356]],["title/components/AchievementsComponent.html",[18,0.461,146,0.952]],["body/components/AchievementsComponent.html",[2,0.169,3,0.146,4,0.146,6,0.362,7,0.333,8,0.746,10,0.942,11,0.502,12,0.029,14,0.169,16,0.014,17,0.014,18,0.554,19,0.605,20,1.167,21,0.814,22,0.814,23,0.814,24,0.814,26,1.258,27,1.66,28,0.814,29,2.308,30,1.989,31,1.258,33,1.258,36,1.595,38,1.796,39,0.748,40,2.308,41,2.193,42,1.594,43,1.868,47,1.594,48,2.193,49,0.748,52,2.613,53,1.949,54,1.731,55,1.372,57,1.112,58,0.805,59,1.112,61,1.266,62,2.029,71,1.594,74,1.949,76,0.748,77,0.748,79,1.469,80,1.469,81,0.877,82,0.351,85,1.031,86,0.879,87,0.879,88,1.031,89,0.382,91,1.031,92,2.193,95,1.031,96,1.031,97,1.949,99,1.594,111,1.031,114,1.031,115,1.031,116,1.031,117,1.031,118,1.031,119,1.031,121,1.031,123,1.594,124,0.936,125,1.594,127,1.737,129,1.949,130,1.124,131,1.124,132,1.594,133,1.594,134,1.594,135,1.594,136,1.737,137,1.124,138,1.737,139,0.701,140,1.258,141,1.258,142,0.814,143,1.731,144,0.814,145,0.814,146,1.287,147,0.814,148,0.605,149,0.814,150,0.605,151,0.814,152,0.605,153,0.814,154,0.605,155,0.814,156,0.562,157,0.814,158,0.605,159,0.814,160,0.605,161,0.814,162,0.605,163,0.814,164,0.814,165,0.814,219,3.579,221,2.573,222,3.291,223,2.124,224,1.741,225,3.202,226,3.914,227,3.202,228,3.914,229,3.914,230,3.202,231,3.202,232,4.404,233,2.071,234,2.895,235,3.202,236,3.202,237,2.071,238,3.202,239,2.071,240,2.071,241,3.202,242,2.071,243,3.202,244,2.071,245,2.071,246,2.071,247,2.071,248,2.071,249,2.071,250,2.071,251,2.071,252,2.071,253,2.39,254,2.105,255,1.904,256,2.071,257,2.071,258,3.202,259,2.071,260,2.071,261,2.071,262,2.071,263,2.071,264,2.071,265,2.071,266,2.071,267,2.071,268,2.071,269,2.071,270,2.071,271,3.202,272,2.071,273,1.232,274,2.071,275,4.404,276,2.356,277,3.202,278,3.202,279,3.202,280,3.202]],["title/injectables/AchievementsService.html",[166,0.761,234,2.142]],["body/injectables/AchievementsService.html",[2,0.246,3,0.214,4,0.214,6,0.28,7,0.441,8,0.827,10,1.041,11,0.576,12,0.029,14,0.246,16,0.018,17,0.018,36,1.782,39,0.989,49,0.707,55,1.412,57,1.301,58,0.789,59,1.301,61,1.301,76,0.989,77,0.989,81,1.026,82,0.513,89,0.557,124,1.238,166,0.989,167,1.284,169,2.242,170,2.242,171,2.109,172,2.635,173,2.109,174,2.433,175,1.284,176,2.245,178,1.796,179,2.109,181,2.887,183,2.109,187,2.109,189,1.943,191,1.284,192,1.943,193,1.664,194,1.943,195,1.943,196,1.943,197,1.943,198,1.943,199,1.943,200,1.943,202,1.389,203,1.189,204,1.284,206,1.189,207,1.389,208,1.389,209,1.284,210,1.284,211,2.363,212,1.507,213,1.507,214,1.507,215,1.507,216,1.507,217,1.507,218,1.507,219,3.852,234,2.784,281,2.544,282,3.026,283,3.026,284,3.026,285,3.026,286,4.235,287,3.026,288,3.026,289,3.026,290,3.026,291,3.026]],["title/components/AppComponent.html",[18,0.461,148,0.952]],["body/components/AppComponent.html",[2,0.277,3,0.241,4,0.241,6,0.315,7,0.478,11,0.425,12,0.029,13,2.186,14,0.277,16,0.02,17,0.02,18,0.736,19,0.996,20,1.675,21,1.339,22,1.339,23,1.339,24,1.339,26,1.805,27,2.205,28,1.339,29,2.544,30,2.192,31,1.805,33,1.805,39,1.073,40,1.339,43,2.36,49,1.073,55,1.214,57,0.796,58,0.736,59,0.796,61,0.796,62,1.675,76,0.796,77,0.796,81,0.846,82,0.577,89,0.628,132,1.696,134,1.696,135,1.696,139,1.154,140,1.805,141,1.805,142,1.339,143,2.283,144,1.339,145,1.339,146,0.996,147,1.339,148,1.626,149,1.339,150,0.996,151,1.339,152,0.996,153,1.339,154,0.996,155,1.339,156,0.925,157,1.339,158,0.996,159,1.339,160,0.996,161,1.339,162,0.996,163,1.339,164,1.339,165,1.339,209,1.949,292,2.864,293,5.198,294,4.595,295,3.824,296,3.407,297,4.595,298,4.595,299,3.407,300,4.595,301,4.595,302,3.862,303,3.407,304,2.864,305,2.507,306,3.407,307,3.407,308,3.407,309,2.864,310,3.407,311,3.407,312,3.407,313,3.407,314,2.239,315,3.407]],["title/modules/AppModule.html",[316,2.142,317,2.142]],["body/modules/AppModule.html",[2,0.255,3,0.221,4,0.221,12,0.029,14,0.255,16,0.018,17,0.018,19,1.706,30,1.061,81,1.205,82,0.531,86,1.329,89,0.577,139,1.061,146,1.706,148,1.866,150,1.706,152,1.706,154,1.706,156,1.584,158,1.706,160,1.706,162,1.706,203,1.231,304,3.648,305,2.306,316,2.06,317,4.43,318,1.864,319,2.06,320,4.184,321,4.184,322,3.648,323,2.306,324,2.635,325,2.635,326,2.635,327,2.635,328,3.47,329,3.648,330,2.635,331,2.306,332,3.134,333,3.648,334,3.648,335,4.34,336,2.635,337,2.306,338,3.134,339,4.34,340,4.34,341,4.34,342,3.134,343,3.134,344,3.134,345,3.134,346,3.134,347,3.134,348,3.134,349,2.635,350,3.134,351,2.306,352,3.134,353,3.134,354,3.134,355,3.134]],["title/modules/AppRoutingModule.html",[316,2.142,328,1.938]],["body/modules/AppRoutingModule.html",[2,0.367,3,0.319,4,0.319,12,0.029,14,0.367,16,0.023,17,0.023,18,0.779,81,1.093,82,0.763,89,0.83,156,1.611,318,2.68,323,3.316,328,3.27,333,3.789,334,4.623,349,3.789,356,4.507,357,4.507,358,5.5,359,3.901,360,3.316,361,4.507,362,5.935,363,4.623,364,4.507,365,4.507,366,4.507,367,4.507]],["title/interfaces/Aptitude.html",[0,0.761,368,1.938]],["body/interfaces/Aptitude.html",[0,1.083,1,1.967,2,0.378,3,0.328,4,0.328,6,0.429,7,0.583,8,1.018,10,0.948,11,0.578,12,0.028,13,2.62,14,0.378,15,2.516,16,0.024,17,0.024,58,0.884,221,4.101,368,3.328,369,3.899,370,5.246]],["title/injectables/AptitudeService.html",[166,0.761,371,2.142]],["body/injectables/AptitudeService.html",[2,0.246,3,0.214,4,0.214,6,0.28,7,0.441,8,0.827,10,1.041,11,0.576,12,0.029,14,0.246,16,0.018,17,0.018,36,1.782,39,0.989,49,0.707,55,1.412,57,1.301,58,0.789,59,1.301,61,1.301,76,0.989,77,0.989,81,1.026,82,0.513,89,0.557,124,1.238,166,0.989,167,1.284,169,2.242,170,2.242,171,2.109,172,2.635,173,2.109,174,2.433,175,1.284,176,2.245,178,1.796,179,2.109,181,2.887,183,2.109,187,2.109,189,1.943,191,1.284,192,1.943,193,1.664,194,1.943,195,1.943,196,1.943,197,1.943,198,1.943,199,1.943,200,1.943,202,1.389,203,1.189,204,1.284,206,1.189,207,1.389,208,1.389,209,1.284,210,1.284,211,2.363,212,1.507,213,1.507,214,1.507,215,1.507,216,1.507,217,1.507,218,1.507,368,3.852,371,2.784,372,2.544,373,3.026,374,3.026,375,3.026,376,3.026,377,4.235,378,3.026,379,3.026,380,3.026,381,3.026,382,3.026]],["title/components/AptitudesComponent.html",[18,0.461,150,0.952]],["body/components/AptitudesComponent.html",[2,0.171,3,0.148,4,0.148,6,0.365,7,0.337,8,0.751,10,0.946,11,0.504,12,0.029,14,0.171,16,0.014,17,0.014,18,0.559,19,0.613,20,1.179,21,0.825,22,0.825,23,0.825,24,0.825,26,1.271,27,1.674,28,0.825,29,2.316,30,1.995,31,1.271,33,1.271,36,1.6,38,1.811,39,0.755,40,2.316,41,2.208,42,1.61,43,1.881,47,1.61,48,2.208,49,0.755,52,2.626,53,1.965,54,1.743,55,1.394,57,1.119,58,0.808,59,1.119,61,1.272,62,2.037,71,1.61,74,1.965,76,0.49,77,0.49,79,1.484,80,1.484,81,0.882,82,0.355,85,1.045,86,0.89,87,0.89,88,1.045,89,0.387,91,1.045,92,1.965,95,1.045,96,1.045,97,1.965,99,1.61,111,1.045,114,1.045,115,1.045,116,1.045,117,1.045,118,1.045,119,1.045,121,1.045,123,1.61,124,0.945,125,1.61,129,1.965,130,1.139,131,1.139,132,1.61,133,1.61,134,1.61,135,1.61,136,1.755,137,1.139,138,1.755,139,0.71,140,1.271,141,1.271,142,0.825,143,1.743,144,0.825,145,0.825,146,0.613,147,0.825,148,0.613,149,0.825,150,1.296,151,0.825,152,0.613,153,0.825,154,0.613,155,0.825,156,0.57,157,0.825,158,0.613,159,0.825,160,0.613,161,0.825,162,0.613,163,0.825,164,0.825,165,0.825,221,2.594,253,2.141,254,2.126,255,1.248,273,1.248,368,3.589,370,3.318,371,3.326,383,1.764,384,5.061,385,3.947,386,3.234,387,3.947,388,3.947,389,2.903,390,3.234,391,3.234,392,4.435,393,2.098,394,3.234,395,2.098,396,3.234,397,2.098,398,2.098,399,3.234,400,2.098,401,3.234,402,2.098,403,2.098,404,2.098,405,2.098,406,2.098,407,2.098,408,2.098,409,2.098,410,2.098,411,2.098,412,2.098,413,2.098,414,3.234,415,2.098,416,3.947,417,3.947,418,3.947,419,2.098,420,2.098,421,2.098,422,2.098,423,2.098,424,2.098,425,2.098,426,3.234,427,2.098,428,2.098,429,3.234,430,3.234]],["title/injectables/AuthServiceService.html",[54,1.28,166,0.761]],["body/injectables/AuthServiceService.html",[2,0.27,3,0.234,4,0.234,6,0.307,7,0.47,11,0.562,12,0.029,14,0.27,16,0.019,17,0.019,36,1.75,38,2.525,39,1.054,49,0.775,54,1.773,55,1.387,57,1.054,58,0.639,59,1.054,61,1.198,62,1.645,76,1.054,77,1.054,79,2.353,81,1.06,82,0.562,87,2.577,89,0.611,127,1.8,166,1.054,167,1.407,169,2.353,170,2.353,175,1.407,176,2.334,178,1.914,181,2.353,189,2.07,191,1.407,192,2.07,193,1.773,194,2.07,195,2.07,196,2.07,197,2.07,198,2.07,199,2.07,200,2.07,202,1.522,203,1.303,204,1.407,206,1.303,207,1.522,208,1.522,209,1.407,210,1.407,211,1.914,302,2.789,431,2.789,432,3.531,433,4.626,434,3.317,435,3.317,436,4.512,437,3.317,438,3.317,439,3.317,440,3.317,441,3.317,442,3.317,443,3.317,444,3.317,445,3.317,446,3.317,447,3.317,448,3.317,449,3.317,450,3.317,451,3.317,452,2.789,453,3.317,454,3.317,455,3.317,456,3.317]],["title/interfaces/Education.html",[0,0.761,457,1.768]],["body/interfaces/Education.html",[0,0.948,1,1.722,2,0.331,3,0.287,4,0.287,6,0.376,7,0.537,8,0.959,10,1.041,11,0.608,12,0.028,13,2.688,14,0.331,15,2.203,16,0.022,17,0.022,223,3.231,295,4.381,457,2.796,458,3.413,459,5.006,460,3.914,461,3.914,462,5.006,463,4.381,464,5.006,465,3.231]],["title/components/EducationComponent.html",[18,0.461,152,0.952]],["body/components/EducationComponent.html",[2,0.16,3,0.139,4,0.139,6,0.35,7,0.32,8,0.725,10,0.927,11,0.493,12,0.029,14,0.16,16,0.013,17,0.013,18,0.536,19,0.574,20,1.12,21,0.772,22,0.772,23,0.772,24,0.772,26,1.208,27,1.606,28,0.772,29,2.279,30,1.964,31,1.208,33,1.208,36,1.574,38,1.737,39,0.718,40,2.279,41,2.132,42,1.53,43,1.816,47,1.53,48,2.132,49,0.718,52,2.563,53,1.885,54,1.682,55,1.374,57,1.085,58,0.729,59,1.085,61,1.244,62,1.997,71,1.53,74,1.885,76,0.459,77,0.459,79,1.41,80,1.41,81,0.856,82,0.333,85,0.978,86,0.833,87,0.833,88,0.978,89,0.362,91,0.978,92,2.653,95,0.978,96,0.978,97,1.885,99,1.53,111,0.978,114,0.978,115,0.978,116,0.978,117,0.978,118,0.978,119,0.978,121,0.978,123,1.53,124,0.898,125,1.53,129,1.885,130,1.066,131,1.066,132,1.53,133,1.53,134,1.53,135,1.53,136,1.667,137,1.066,138,1.667,139,0.665,140,1.208,141,1.208,142,0.772,143,1.682,144,0.772,145,0.772,146,0.574,147,0.772,148,0.574,149,0.772,150,0.574,151,0.772,152,1.251,153,0.772,154,0.574,155,0.772,156,0.533,157,0.772,158,0.574,159,0.772,160,0.574,161,0.772,162,0.574,163,0.772,164,0.772,165,0.772,223,2.054,253,2.673,255,1.168,273,1.168,295,2.785,389,2.785,457,3.293,459,3.182,460,2.488,461,2.488,462,3.182,463,2.785,464,3.182,465,2.054,466,1.652,467,3.785,468,3.073,469,3.785,470,3.785,471,3.073,472,3.073,473,4.281,474,1.965,475,2.929,476,3.073,477,1.965,478,3.073,479,1.965,480,1.965,481,3.073,482,1.965,483,3.073,484,1.965,485,1.965,486,1.965,487,1.965,488,1.965,489,1.965,490,1.965,491,1.965,492,1.652,493,1.965,494,1.652,495,1.965,496,2.261,497,2.785,498,1.652,499,1.652,500,1.965,501,1.965,502,3.073,503,1.291,504,1.965,505,1.965,506,1.965,507,1.965,508,1.965,509,1.965,510,1.965,511,1.965,512,1.965,513,1.965,514,1.965,515,1.965,516,1.965,517,1.965,518,1.965,519,1.965,520,1.965,521,3.073,522,1.965,523,1.965,524,4.281,525,3.073,526,3.073,527,3.073,528,3.073,529,3.073,530,3.073,531,3.073,532,3.073]],["title/injectables/EducationService.html",[166,0.761,475,1.938]],["body/injectables/EducationService.html",[2,0.221,3,0.192,4,0.192,6,0.252,7,0.409,8,0.78,10,1.015,11,0.563,12,0.029,14,0.221,16,0.017,17,0.017,36,1.758,39,0.916,40,2.189,49,0.635,55,1.454,57,1.249,58,0.757,59,1.249,61,1.249,76,1.301,77,1.301,81,0.985,82,0.46,89,0.501,124,1.147,127,2.498,166,0.916,167,1.153,169,2.113,170,2.113,171,1.953,172,2.51,173,1.953,174,2.292,175,1.153,176,2.139,178,1.664,179,1.953,181,2.826,183,1.953,187,1.953,189,1.8,191,1.153,192,1.8,193,2.189,194,1.8,195,1.8,196,1.8,197,1.8,198,1.8,199,1.8,200,1.8,202,1.247,203,1.068,204,1.153,206,1.068,207,1.247,208,1.247,209,1.153,210,1.153,211,2.268,212,1.353,213,1.353,214,1.353,215,1.353,216,1.353,217,1.353,218,1.353,457,3.458,463,3.387,475,2.333,533,2.285,534,3.871,535,4.604,536,4.604,537,3.923,538,2.718,539,2.718,540,2.718,541,3.923,542,2.718,543,2.718,544,2.718,545,3.923,546,3.923,547,2.718,548,3.923,549,2.718,550,2.718,551,3.923,552,3.923,553,3.923,554,2.718,555,2.285,556,2.718,557,2.285,558,2.718,559,2.718,560,1.999]],["title/interfaces/Experience.html",[0,0.761,561,1.768]],["body/interfaces/Experience.html",[0,0.989,1,1.797,2,0.345,3,0.299,4,0.299,6,0.392,7,0.551,8,0.978,10,0.896,11,0.603,12,0.028,13,2.686,14,0.345,15,2.298,16,0.022,17,0.022,223,3.281,460,3.974,461,3.974,465,3.281,561,2.872,562,3.561,563,4.449,564,5.083,565,5.083]],["title/components/ExperienceComponent.html",[18,0.461,154,0.952]],["body/components/ExperienceComponent.html",[2,0.167,3,0.145,4,0.145,6,0.36,7,0.331,8,0.743,10,0.94,11,0.501,12,0.029,14,0.167,16,0.014,17,0.014,18,0.551,19,0.6,20,1.16,21,0.807,22,0.807,23,0.807,24,0.807,26,1.25,27,1.652,28,0.807,29,2.304,30,1.985,31,1.25,33,1.25,36,1.057,38,1.787,39,0.743,40,2.304,41,2.183,42,1.584,43,1.86,47,1.584,48,2.183,49,0.743,52,2.606,53,1.939,54,1.723,55,1.37,57,1.108,58,0.741,59,1.108,61,1.263,62,1.908,71,1.584,74,1.939,76,0.48,77,0.48,79,1.46,80,1.46,81,0.874,82,0.348,85,1.023,86,0.871,87,0.871,88,1.023,89,0.378,91,1.023,92,2.498,95,1.023,96,1.023,97,1.939,99,1.584,111,1.023,114,1.023,115,1.023,116,1.023,117,1.023,118,1.023,119,1.023,121,1.023,123,1.584,124,0.93,125,1.584,129,1.939,130,1.115,131,1.115,132,1.584,133,1.584,134,1.584,135,1.584,136,1.726,137,1.115,138,1.726,139,0.695,140,1.25,141,1.25,142,0.807,143,1.723,144,0.807,145,0.807,146,0.6,147,0.807,148,0.6,149,0.807,150,0.6,151,0.807,152,0.6,153,0.807,154,1.282,155,0.807,156,0.558,157,0.807,158,0.6,159,0.807,160,0.6,161,0.807,162,0.6,163,0.807,164,0.807,165,0.807,223,2.113,253,2.722,255,1.222,273,1.222,460,2.56,461,2.56,465,2.113,496,2.865,497,2.341,561,3.321,563,2.865,564,3.274,565,3.274,566,1.727,567,3.894,568,3.182,569,3.894,570,3.894,571,3.182,572,3.182,573,4.385,574,2.054,575,2.984,576,3.182,577,2.054,578,3.182,579,2.054,580,2.054,581,3.182,582,2.054,583,3.182,584,2.054,585,2.054,586,2.054,587,2.054,588,2.054,589,2.054,590,2.054,591,1.727,592,2.054,593,2.054,594,2.054,595,3.182,596,2.054,597,2.054,598,2.054,599,2.054,600,2.054,601,2.054,602,2.054,603,2.054,604,2.054,605,2.054,606,2.054,607,2.054,608,2.054,609,2.054,610,2.054,611,3.182,612,2.054,613,2.054,614,3.686,615,3.182,616,3.182,617,3.182,618,3.182,619,3.182,620,3.182]],["title/injectables/ExperienceService.html",[166,0.761,575,1.938]],["body/injectables/ExperienceService.html",[2,0.199,3,0.173,4,0.173,6,0.226,7,0.378,8,0.733,10,0.987,11,0.57,12,0.029,14,0.199,16,0.015,17,0.015,36,1.732,39,1.011,40,2.291,49,0.57,55,1.483,57,1.333,58,0.808,59,1.333,61,1.333,62,1.578,76,1.333,77,1.406,81,0.943,82,0.414,89,0.45,124,1.06,127,1.325,166,0.847,167,1.036,169,1.986,170,1.986,171,1.806,172,2.386,173,1.806,174,2.155,175,1.036,176,2.032,178,1.539,179,1.806,181,2.762,183,1.806,187,1.806,189,1.665,191,1.036,192,1.665,193,2.242,194,1.665,195,1.665,196,1.665,197,1.665,198,1.665,199,1.665,200,1.665,202,1.121,203,0.96,204,1.036,206,0.96,207,1.121,208,1.121,209,1.036,210,1.036,211,2.171,212,1.216,213,1.216,214,1.216,215,1.216,216,1.216,217,1.216,218,1.216,534,3.639,555,2.053,557,2.053,560,1.797,561,3.398,563,3.184,575,2.157,614,2.053,621,2.053,622,4.329,623,4.329,624,4.329,625,4.329,626,3.628,627,3.628,628,3.628,629,3.628,630,3.628,631,2.442,632,3.628,633,2.442,634,3.628,635,2.442,636,2.442,637,2.442,638,2.442,639,3.628,640,2.442,641,2.442,642,2.442,643,3.628,644,2.442,645,3.628,646,2.442,647,3.628,648,3.628,649,2.442,650,2.442,651,3.628,652,2.442,653,3.628,654,2.442,655,2.442,656,2.442,657,2.442,658,2.442,659,2.442]],["title/components/HomeComponent.html",[18,0.461,156,0.885]],["body/components/HomeComponent.html",[2,0.333,3,0.289,4,0.289,12,0.028,14,0.333,16,0.022,17,0.022,18,0.804,19,1.195,20,1.887,21,1.606,22,1.606,23,1.606,24,1.606,28,1.606,29,2.613,30,2.251,31,2.034,33,2.034,58,0.733,81,0.753,82,0.692,89,0.753,139,1.384,140,2.034,141,2.034,142,1.606,143,2.346,144,1.606,145,1.606,146,1.195,147,1.606,148,1.195,149,1.606,150,1.195,151,1.606,152,1.195,153,1.606,154,1.195,155,1.606,156,1.62,157,1.606,158,1.195,159,1.606,160,1.195,161,1.606,162,1.195,163,1.606,164,1.606,165,1.606,363,4.351,660,3.437,661,5.68,662,5.176]],["title/interfaces/Login.html",[0,0.761,432,1.938]],["body/interfaces/Login.html",[0,1.134,1,2.06,2,0.395,3,0.343,4,0.343,6,0.449,7,0.599,11,0.532,12,0.028,13,2.577,14,0.395,16,0.024,17,0.024,432,3.42,663,4.082,664,5.326,665,5.326]],["title/components/NotFoundComponent.html",[18,0.461,158,0.952]],["body/components/NotFoundComponent.html",[2,0.281,3,0.244,4,0.244,6,0.319,11,0.319,12,0.029,14,0.281,16,0.02,17,0.02,18,0.741,19,1.007,20,1.688,21,1.355,22,1.355,23,1.355,24,1.355,26,1.82,27,2.218,28,1.355,29,2.549,30,2.196,31,1.82,33,1.82,39,1.082,43,2.371,49,0.805,55,1.082,57,0.805,58,0.741,59,0.805,61,0.805,62,1.688,81,0.853,82,0.584,89,0.635,133,1.716,139,1.167,140,1.82,141,1.82,142,1.355,143,2.197,144,1.355,145,1.355,146,1.007,147,1.355,148,1.007,149,1.355,150,1.007,151,1.355,152,1.007,153,1.355,154,1.007,155,1.355,156,0.936,157,1.355,158,1.634,159,1.355,160,1.007,161,1.355,162,1.007,163,1.355,164,1.355,165,1.355,175,1.462,176,2.371,178,1.964,203,1.355,210,1.462,314,3.437,351,3.847,666,4.396,667,2.898,668,4.631,669,5.229,670,4.631,671,3.447,672,3.447,673,4.631,674,4.631,675,3.447,676,4.631,677,3.893,678,4.631,679,4.631,680,4.631,681,4.631,682,3.447,683,2.898,684,4.631,685,2.898,686,3.447,687,3.447]],["title/interfaces/Person.html",[0,0.761,688,1.938]],["body/interfaces/Person.html",[0,0.989,1,1.797,2,0.345,3,0.299,4,0.299,6,0.392,7,0.551,8,0.978,10,1.054,11,0.603,12,0.028,13,2.672,14,0.345,15,2.298,16,0.022,17,0.022,58,0.856,465,3.281,688,3.147,689,3.561,690,5.083,691,5.083,692,5.083,693,5.083,694,5.083]],["title/components/PersonComponent.html",[18,0.461,160,0.952]],["body/components/PersonComponent.html",[2,0.12,3,0.104,4,0.104,6,0.289,7,0.254,8,0.613,10,0.841,11,0.528,12,0.029,13,2.01,14,0.12,16,0.01,17,0.01,18,0.441,19,0.43,20,0.888,21,0.579,22,0.579,23,0.579,24,0.579,26,0.958,27,1.322,28,0.579,29,2.106,30,1.815,31,0.958,33,0.958,36,1.528,38,1.43,39,0.569,40,2.212,41,1.803,42,1.213,43,1.536,47,1.213,48,1.803,49,0.569,52,2.278,53,1.552,54,1.423,55,1.43,57,1.01,58,0.743,59,1.01,61,1.252,62,2.053,71,1.213,74,1.998,76,0.569,77,0.569,79,1.841,80,1.841,81,0.914,82,0.249,85,0.733,86,0.625,87,0.625,88,0.733,89,0.271,91,1.213,92,2.471,95,0.733,96,0.733,97,1.552,99,2.278,111,0.733,114,0.733,115,0.733,116,0.733,117,0.733,118,0.733,119,1.803,120,1.238,121,0.733,123,1.213,124,0.712,125,1.213,127,1.691,139,0.499,140,0.958,141,0.958,142,0.579,143,1.423,144,0.579,145,0.579,146,0.43,147,0.579,148,0.43,149,0.579,150,0.43,151,0.579,152,0.43,153,0.579,154,0.43,155,0.579,156,0.4,157,0.579,158,0.43,159,0.579,160,1.059,161,0.579,162,0.43,163,0.579,164,0.579,165,0.579,211,1.034,253,1.322,254,0.968,255,0.876,276,1.084,309,1.238,314,0.968,360,1.084,432,2.154,433,3.634,452,2.049,457,0.799,465,1.691,475,2.721,492,1.238,494,2.62,496,1.084,503,0.968,560,1.793,561,0.799,575,2.721,591,1.238,664,4.172,665,3.847,683,1.238,688,3.391,690,2.62,691,2.62,692,2.62,693,2.62,694,2.62,695,1.238,696,3.117,697,2.437,698,4.576,699,3.117,700,3.117,701,4.012,702,3.117,703,3.117,704,3.117,705,3.117,706,4.012,707,3.622,708,2.437,709,2.437,710,3.622,711,2.437,712,3.622,713,2.437,714,1.473,715,2.841,716,4.576,717,2.437,718,1.473,719,1.473,720,2.437,721,1.473,722,1.473,723,1.473,724,2.437,725,1.473,726,2.437,727,1.473,728,1.473,729,2.437,730,3.117,731,1.473,732,1.473,733,1.473,734,1.473,735,1.473,736,1.473,737,1.473,738,1.473,739,1.473,740,1.473,741,1.473,742,1.473,743,1.473,744,1.473,745,1.473,746,1.473,747,1.473,748,1.473,749,1.473,750,1.473,751,1.473,752,2.437,753,1.473,754,1.473,755,1.473,756,1.473,757,1.473,758,1.473,759,1.473,760,1.473,761,1.473,762,1.473,763,1.473,764,1.473,765,1.473,766,1.473,767,2.437,768,2.437,769,2.437,770,1.473,771,1.473,772,1.473,773,2.437,774,1.473,775,1.473,776,1.473,777,1.473,778,1.473,779,1.473,780,1.473,781,1.473,782,1.473,783,1.473,784,1.473,785,1.473,786,1.473,787,1.473,788,1.473,789,1.473,790,2.437,791,2.437,792,1.473,793,1.473,794,1.473,795,1.473,796,1.473,797,1.473,798,1.473,799,2.437,800,1.238,801,1.473,802,1.473,803,1.473,804,1.473,805,1.473,806,1.473,807,3.117,808,1.473,809,1.473,810,1.473,811,1.473,812,2.437,813,3.622,814,2.437,815,2.437,816,2.437,817,2.437,818,2.437,819,2.437,820,2.437,821,1.473,822,2.437,823,2.437,824,1.473,825,2.437,826,1.473,827,2.437,828,1.473,829,1.473,830,1.473,831,1.473,832,1.473,833,1.473,834,1.473,835,2.437,836,1.473,837,1.473,838,1.473,839,1.473,840,1.473,841,1.473,842,1.473,843,1.473,844,1.473,845,1.473,846,1.473]],["title/injectables/PersonaService.html",[166,0.761,715,2.142]],["body/injectables/PersonaService.html",[2,0.246,3,0.214,4,0.214,6,0.28,7,0.441,8,0.827,10,1.041,11,0.576,12,0.029,14,0.246,16,0.018,17,0.018,36,1.782,39,0.989,49,0.707,55,1.412,57,1.301,58,0.789,59,1.301,61,1.301,76,0.989,77,0.989,81,1.026,82,0.513,89,0.557,124,1.238,166,0.989,167,1.284,169,2.242,170,2.242,171,2.109,172,2.635,173,2.109,174,2.433,175,1.284,176,2.245,178,1.796,179,2.109,181,2.887,183,2.109,187,2.109,189,1.943,191,1.284,192,1.943,193,1.664,194,1.943,195,1.943,196,1.943,197,1.943,198,1.943,199,1.943,200,1.943,202,1.389,203,1.189,204,1.284,206,1.189,207,1.389,208,1.389,209,1.284,210,1.284,211,2.363,212,1.507,213,1.507,214,1.507,215,1.507,216,1.507,217,1.507,218,1.507,688,3.852,715,2.784,847,2.544,848,3.026,849,3.026,850,3.026,851,3.026,852,4.235,853,3.026,854,3.026,855,3.026,856,3.026,857,3.026]],["title/interfaces/Progressbar.html",[0,0.761,858,1.938]],["body/interfaces/Progressbar.html",[0,1.092,1,1.983,2,0.381,3,0.33,4,0.33,6,0.433,7,0.585,8,1.021,10,1.13,11,0.579,12,0.028,13,2.458,14,0.381,15,2.536,16,0.024,17,0.024,58,0.854,858,3.344,859,3.93,860,5.069,861,4.675,862,4.675]],["title/injectables/ProgressbarService.html",[166,0.761,863,2.142]],["body/injectables/ProgressbarService.html",[2,0.246,3,0.214,4,0.214,6,0.28,7,0.441,8,0.827,10,1.041,11,0.576,12,0.029,14,0.246,16,0.018,17,0.018,36,1.782,39,0.989,49,0.707,55,1.412,57,1.301,58,0.789,59,1.301,61,1.301,76,0.989,77,0.989,81,1.026,82,0.513,89,0.557,124,1.238,166,0.989,167,1.284,169,2.242,170,2.242,171,2.109,172,2.635,173,2.109,174,2.433,175,1.284,176,2.245,178,1.796,179,2.109,181,2.887,183,2.109,187,2.109,189,1.943,191,1.284,192,1.943,193,1.664,194,1.943,195,1.943,196,1.943,197,1.943,198,1.943,199,1.943,200,1.943,202,1.389,203,1.189,204,1.284,206,1.189,207,1.389,208,1.389,209,1.284,210,1.284,211,2.363,212,1.507,213,1.507,214,1.507,215,1.507,216,1.507,217,1.507,218,1.507,858,3.804,863,2.784,864,2.544,865,3.026,866,3.026,867,3.026,868,3.026,869,4.235,870,3.026,871,3.026,872,3.56,873,3.026,874,3.026,875,3.026]],["title/components/SkillsComponent.html",[18,0.461,162,0.952]],["body/components/SkillsComponent.html",[2,0.17,3,0.147,4,0.147,6,0.364,7,0.335,8,0.748,10,0.996,11,0.503,12,0.029,14,0.17,16,0.014,17,0.014,18,0.556,19,0.609,20,1.173,21,0.819,22,0.819,23,0.819,24,0.819,26,1.264,27,1.667,28,0.819,29,2.312,30,1.992,31,1.264,33,1.264,36,1.597,38,1.803,39,0.751,40,2.312,41,2.2,42,1.602,43,1.874,47,1.602,48,2.2,49,0.751,52,2.619,53,1.956,54,1.736,55,1.392,57,1.115,58,0.806,59,1.115,61,1.269,62,2.032,71,1.602,74,1.956,76,0.487,77,0.487,79,1.476,80,1.476,81,0.88,82,0.353,85,1.037,86,0.884,87,0.884,88,1.037,89,0.384,91,1.037,92,1.956,95,1.037,96,1.037,97,1.956,99,1.602,111,1.037,114,1.037,115,1.037,116,1.037,117,1.037,118,1.037,119,1.037,121,1.037,123,1.602,124,0.94,125,1.602,129,1.956,130,1.13,131,1.13,132,1.602,133,1.602,134,1.602,135,1.602,136,1.745,137,1.13,138,1.745,139,0.705,140,1.264,141,1.264,142,0.819,143,1.736,144,0.819,145,0.819,146,0.609,147,0.819,148,0.609,149,0.819,150,0.609,151,0.819,152,0.609,153,0.819,154,0.609,155,0.819,156,0.566,157,0.819,158,0.609,159,0.819,160,0.609,161,0.819,162,1.291,163,1.544,164,0.819,165,0.819,253,1.13,254,1.369,273,1.239,276,2.366,314,1.369,389,2.89,497,1.533,498,1.751,499,1.751,503,1.369,685,1.751,858,3.583,860,3.303,863,3.317,872,1.751,876,1.751,877,3.929,878,3.217,879,3.929,880,3.929,881,3.217,882,3.217,883,4.418,884,2.084,885,3.217,886,2.084,887,3.217,888,2.084,889,2.084,890,3.217,891,2.084,892,3.217,893,2.084,894,2.084,895,2.084,896,2.084,897,2.084,898,2.084,899,2.084,900,2.084,901,2.084,902,2.084,903,2.084,904,2.084,905,2.084,906,3.217,907,2.084,908,2.084,909,2.084,910,2.084,911,2.084,912,2.084,913,2.084,914,2.084,915,2.084,916,2.084,917,2.084,918,3.217,919,2.084,920,2.084,921,3.217,922,3.217,923,3.217,924,3.217,925,3.217,926,2.084,927,2.084,928,2.084]],["title/coverage.html",[929,3.747]],["body/coverage.html",[0,1.45,4,0.238,5,2.837,11,0.312,12,0.029,16,0.019,17,0.019,18,0.9,19,0.986,25,2.837,51,2.218,54,1.326,87,1.431,146,0.986,148,0.986,150,0.986,152,0.986,154,0.986,156,0.916,158,0.986,160,0.986,162,0.986,166,1.45,168,2.837,193,1.326,206,1.794,219,2.007,220,2.837,224,2.837,234,2.218,281,2.837,292,2.837,351,2.483,368,2.007,369,2.837,371,2.218,372,2.837,383,2.837,431,2.837,432,2.007,457,1.831,458,2.837,466,2.837,475,2.007,503,4.473,533,2.837,561,1.831,562,2.837,566,2.837,575,2.007,621,2.837,660,2.837,663,2.837,666,2.837,667,2.837,688,2.007,689,2.837,695,2.837,715,2.218,847,2.837,858,2.007,859,2.837,863,2.218,864,2.837,876,2.837,929,2.837,930,3.375,931,3.375,932,3.375,933,3.375,934,5.542,935,5.173,936,5.79,937,5.173,938,3.375,939,3.375,940,4.565,941,3.375,942,6.102,943,3.375,944,3.375,945,2.837,946,5.542,947,2.837,948,3.837,949,2.837,950,2.837,951,3.375,952,3.375]],["title/dependencies.html",[319,2.578,953,1.998]],["body/dependencies.html",[12,0.029,16,0.024,17,0.024,82,0.792,86,1.983,204,1.983,305,3.439,319,3.073,336,4.727,337,4.136,360,3.439,954,4.675,955,6.631,956,4.675,957,4.675,958,4.675,959,3.93,960,4.675,961,4.675,962,4.675,963,4.675,964,4.675,965,4.675,966,4.675,967,4.675,968,4.675,969,4.675]],["title/index.html",[6,0.251,970,2.716,971,2.716]],["body/index.html",[3,0.288,12,0.022,16,0.022,17,0.022,18,0.803,26,1.599,30,1.378,58,0.576,129,3.178,193,1.599,331,2.994,677,3.421,953,2.994,959,4.338,972,4.069,973,5.161,974,4.069,975,5.667,976,5.667,977,3.421,978,4.069,979,4.069,980,6.15,981,4.069,982,4.069,983,4.069,984,4.069,985,4.069,986,4.069,987,4.069,988,4.069,989,4.069,990,4.069,991,5.667,992,5.667,993,4.069,994,5.96,995,4.069,996,4.069,997,4.069,998,4.069,999,5.161,1000,5.161,1001,5.96,1002,4.069,1003,5.161,1004,5.161,1005,4.069,1006,6.284,1007,4.069,1008,4.069,1009,4.069,1010,5.161,1011,4.069,1012,4.069,1013,4.069,1014,4.069,1015,4.069,1016,4.069,1017,5.667,1018,4.069,1019,4.069,1020,4.069,1021,2.994,1022,4.069]],["title/modules.html",[318,2.651]],["body/modules.html",[12,0.025,16,0.025,17,0.025,317,3.398,318,3.074,328,3.074,337,3.803,1023,5.17,1024,5.17,1025,5.966,1026,5.17,1027,5.17]],["title/overview.html",[1021,3.279]],["body/overview.html",[1,1.734,12,0.028,16,0.022,17,0.022,19,1.66,20,1.49,139,1.384,146,1.66,148,1.867,150,1.66,152,1.66,154,1.66,156,1.542,158,1.66,160,1.66,162,1.66,167,1.734,316,2.687,317,4.504,318,2.431,319,2.687,320,3.437,321,3.437,322,3.437,323,3.008,324,3.437,325,3.437,326,3.437,327,3.437,328,3.377,329,4.351,330,3.437,331,3.008,359,2.687,1021,3.008,1028,4.088,1029,4.088,1030,5.176,1031,4.088]],["title/properties.html",[7,0.408,953,1.998]],["body/properties.html",[7,0.548,12,0.027,16,0.026,17,0.026,977,4.424,1032,5.262]],["title/routes.html",[359,2.93]],["body/routes.html",[12,0.026,16,0.026,17,0.026,359,3.49]],["title/miscellaneous/variables.html",[1033,2.284,1034,3.297]],["body/miscellaneous/variables.html",[6,0.424,11,0.575,12,0.029,16,0.024,17,0.024,76,1.396,77,1.396,80,2.1,191,2.355,206,2.441,800,4.667,945,3.848,947,3.848,948,3.848,949,4.667,950,4.667,1033,3.848,1034,3.848,1035,5.552,1036,4.578,1037,4.578,1038,4.578,1039,4.578,1040,4.578,1041,5.552,1042,5.552,1043,5.552,1044,5.552]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/NotFoundComponent.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":503,"title":{},"body":{"components/EducationComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1032,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["0.17.0",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1029,"title":{},"body":{"overview.html":{}}}],["10em",{"_index":684,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["13.1.0",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["13.1.3",{"_index":978,"title":{},"body":{"index.html":{}}}],["13.2.1",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["1px",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":926,"title":{},"body":{"components/SkillsComponent.html":{}}}],["2",{"_index":1028,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":1031,"title":{},"body":{"overview.html":{}}}],["3px",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["50rem",{"_index":928,"title":{},"body":{"components/SkillsComponent.html":{}}}],["50vh",{"_index":839,"title":{},"body":{"components/PersonComponent.html":{}}}],["5em",{"_index":686,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["5px",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/SkillsComponent.html":{}}}],["5vh",{"_index":840,"title":{},"body":{"components/PersonComponent.html":{}}}],["7.4.0",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1030,"title":{},"body":{"overview.html":{}}}],["about'},{'name",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["about).subscribe",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.css",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.id",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.text",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":19,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["aboutform",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutlist",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutservice",{"_index":51,"title":{"injectables/AboutService.html":{}},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"coverage.html":{}}}],["accessors",{"_index":713,"title":{},"body":{"components/PersonComponent.html":{}}}],["acerca",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{}}}],["achieveform",{"_index":228,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["achievelist",{"_index":229,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["achievement",{"_index":219,"title":{"interfaces/Achievement.html":{}},"body":{"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"coverage.html":{}}}],["achievement).subscribe",{"_index":270,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["achievement.description",{"_index":261,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["achievement.id",{"_index":259,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["achievement.name",{"_index":260,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["achievement.project_type",{"_index":263,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["achievement.url",{"_index":262,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["achievements",{"_index":225,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["achievements'},{'name",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["achievements.component.css",{"_index":226,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["achievements.component.html",{"_index":227,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["achievementscomponent",{"_index":146,"title":{"components/AchievementsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["achievementservice",{"_index":236,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["achievementsservice",{"_index":234,"title":{"injectables/AchievementsService.html":{}},"body":{"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"coverage.html":{}}}],["actual_component",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["add",{"_index":1013,"title":{},"body":{"index.html":{}}}],["adquiridos",{"_index":923,"title":{},"body":{"components/SkillsComponent.html":{}}}],["aires",{"_index":553,"title":{},"body":{"injectables/EducationService.html":{}}}],["angular",{"_index":975,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":203,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"modules/AppModule.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"components/NotFoundComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["angular/compiler",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"modules/AppModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":360,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PersonComponent.html":{},"dependencies.html":{}}}],["apibaseurl",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiserverurl",{"_index":169,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["app",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"index.html":{}}}],["app.component",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["appcomponent",{"_index":148,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":195,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["application/x",{"_index":197,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["appmodule",{"_index":317,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":328,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aptitude",{"_index":368,"title":{"interfaces/Aptitude.html":{}},"body":{"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"coverage.html":{}}}],["aptitude).subscribe",{"_index":425,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["aptitude.confirmername",{"_index":417,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["aptitude.description",{"_index":418,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["aptitude.id",{"_index":415,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["aptitude.name",{"_index":416,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["aptitudeform",{"_index":387,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["aptitudelist",{"_index":388,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["aptitudes",{"_index":384,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["aptitudes'},{'name",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["aptitudes.component.css",{"_index":385,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["aptitudes.component.html",{"_index":386,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["aptitudescomponent",{"_index":150,"title":{"components/AptitudesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["aptitudeservice",{"_index":371,"title":{"injectables/AptitudeService.html":{}},"body":{"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"coverage.html":{}}}],["artifacts",{"_index":995,"title":{},"body":{"index.html":{}}}],["autenticación",{"_index":446,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["authservice",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["authserviceservice",{"_index":54,"title":{"injectables/AuthServiceService.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":985,"title":{},"body":{"index.html":{}}}],["available",{"_index":1027,"title":{},"body":{"modules.html":{}}}],["background",{"_index":835,"title":{},"body":{"components/PersonComponent.html":{}}}],["base",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/PersonComponent.html":{}}}],["basehref",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["behaviorsubject",{"_index":555,"title":{},"body":{"injectables/EducationService.html":{},"injectables/ExperienceService.html":{}}}],["behaviorsubject('conicet",{"_index":643,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["behaviorsubject('https://i.ibb.co/9vhmqq9/uba.png",{"_index":548,"title":{},"body":{"injectables/EducationService.html":{}}}],["behaviorsubject('https://i.ibb.co/kqhtbvw/conicet.png",{"_index":651,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["behaviorsubject('informático",{"_index":653,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["behaviorsubject('universidad",{"_index":551,"title":{},"body":{"injectables/EducationService.html":{}}}],["bienvenido",{"_index":812,"title":{},"body":{"components/PersonComponent.html":{}}}],["birthday",{"_index":690,"title":{},"body":{"interfaces/Person.html":{},"components/PersonComponent.html":{}}}],["bolder",{"_index":829,"title":{},"body":{"components/PersonComponent.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["bootstrap",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/SkillsComponent.html":{}}}],["borrar",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["bottom",{"_index":685,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SkillsComponent.html":{}}}],["box",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":1025,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["buenos",{"_index":552,"title":{},"body":{"injectables/EducationService.html":{}}}],["build",{"_index":994,"title":{},"body":{"index.html":{}}}],["byid",{"_index":214,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["cancelar",{"_index":820,"title":{},"body":{"components/PersonComponent.html":{}}}],["capabilities",{"_index":1015,"title":{},"body":{"index.html":{}}}],["career",{"_index":459,"title":{},"body":{"interfaces/Education.html":{},"components/EducationComponent.html":{}}}],["change",{"_index":987,"title":{},"body":{"index.html":{}}}],["changecompany_name",{"_index":626,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["changecompany_name(value",{"_index":630,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["changejob_image",{"_index":627,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["changejob_image(value",{"_index":632,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["changeposition",{"_index":628,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["changeposition(value",{"_index":634,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["changes",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["check",{"_index":1020,"title":{},"body":{"index.html":{}}}],["choice",{"_index":1009,"title":{},"body":{"index.html":{}}}],["cinthia",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthServiceService.html":{}}}],["class",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["clear",{"_index":707,"title":{},"body":{"components/PersonComponent.html":{}}}],["clearform",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["cli",{"_index":976,"title":{},"body":{"index.html":{}}}],["close",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["cluster_appmodule",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":989,"title":{},"body":{"index.html":{}}}],["command",{"_index":1010,"title":{},"body":{"index.html":{}}}],["company_name",{"_index":563,"title":{},"body":{"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{}}}],["companyname",{"_index":698,"title":{},"body":{"components/PersonComponent.html":{}}}],["component",{"_index":18,"title":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["components",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"overview.html":{}}}],["components/about/about.component",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["components/achievements/achievements.component",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["components/aptitudes/aptitudes.component",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["components/education/education.component",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["components/experience/experience.component",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["components/home/home.component",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/not",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["components/person/person.component",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["components/skills/skills.component",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":794,"title":{},"body":{"components/PersonComponent.html":{}}}],["confirm(\"¿estás",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["confirmername",{"_index":370,"title":{},"body":{"interfaces/Aptitude.html":{},"components/AptitudesComponent.html":{}}}],["console.log(\"el",{"_index":444,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["console.log(\"no",{"_index":801,"title":{},"body":{"components/PersonComponent.html":{}}}],["console.log(\"tocastes",{"_index":795,"title":{},"body":{"components/PersonComponent.html":{}}}],["console.log(a",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":361,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["constructor(aboutservice",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{}}}],["constructor(achievementservice",{"_index":233,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["constructor(aptitudeservice",{"_index":393,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["constructor(basehref",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(educationservice",{"_index":474,"title":{},"body":{"components/EducationComponent.html":{}}}],["constructor(experienceservice",{"_index":574,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["constructor(http",{"_index":175,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"components/NotFoundComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["constructor(personaservice",{"_index":714,"title":{},"body":{"components/PersonComponent.html":{}}}],["constructor(private",{"_index":210,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"components/NotFoundComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["constructor(progressbarservice",{"_index":884,"title":{},"body":{"components/SkillsComponent.html":{}}}],["contacto",{"_index":825,"title":{},"body":{"components/PersonComponent.html":{}}}],["context",{"_index":949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contraseña",{"_index":815,"title":{},"body":{"components/PersonComponent.html":{}}}],["cookie",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["corriendo",{"_index":448,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["couldn't",{"_index":675,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["couldn\\'t",{"_index":687,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["cover",{"_index":842,"title":{},"body":{"components/PersonComponent.html":{}}}],["coverage",{"_index":929,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":216,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["credentials",{"_index":438,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["credentials).pipe",{"_index":450,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["cuit",{"_index":691,"title":{},"body":{"interfaces/Person.html":{},"components/PersonComponent.html":{}}}],["currentcompany_name",{"_index":622,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["currentimage",{"_index":534,"title":{},"body":{"injectables/EducationService.html":{},"injectables/ExperienceService.html":{}}}],["currentposition",{"_index":623,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["currentschool_name",{"_index":535,"title":{},"body":{"injectables/EducationService.html":{}}}],["data",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["dateend",{"_index":460,"title":{},"body":{"interfaces/Education.html":{},"components/EducationComponent.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{}}}],["datestart",{"_index":461,"title":{},"body":{"interfaces/Education.html":{},"components/EducationComponent.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{}}}],["datos",{"_index":808,"title":{},"body":{"components/PersonComponent.html":{}}}],["de",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"components/PersonComponent.html":{}}}],["declarations",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["del",{"_index":822,"title":{},"body":{"components/PersonComponent.html":{}}}],["delete",{"_index":171,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["delete(id",{"_index":179,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["dependencies",{"_index":319,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":221,"title":{},"body":{"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"interfaces/Aptitude.html":{},"components/AptitudesComponent.html":{}}}],["deseas",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["dev",{"_index":982,"title":{},"body":{"index.html":{}}}],["development",{"_index":979,"title":{},"body":{"index.html":{}}}],["directive",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["directives",{"_index":164,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":993,"title":{},"body":{"index.html":{}}}],["directory",{"_index":998,"title":{},"body":{"index.html":{}}}],["display",{"_index":843,"title":{},"body":{"components/PersonComponent.html":{}}}],["dist",{"_index":997,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["dynamic",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":732,"title":{},"body":{"components/PersonComponent.html":{}}}],["e.preventdefault",{"_index":796,"title":{},"body":{"components/PersonComponent.html":{}}}],["e2e",{"_index":1007,"title":{},"body":{"index.html":{}}}],["edu.career",{"_index":527,"title":{},"body":{"components/EducationComponent.html":{}}}],["edu.dateend",{"_index":530,"title":{},"body":{"components/EducationComponent.html":{}}}],["edu.datestart",{"_index":529,"title":{},"body":{"components/EducationComponent.html":{}}}],["edu.edu_type",{"_index":531,"title":{},"body":{"components/EducationComponent.html":{}}}],["edu.school_name",{"_index":525,"title":{},"body":{"components/EducationComponent.html":{}}}],["edu.score",{"_index":528,"title":{},"body":{"components/EducationComponent.html":{}}}],["edu.title",{"_index":526,"title":{},"body":{"components/EducationComponent.html":{}}}],["edu.url",{"_index":532,"title":{},"body":{"components/EducationComponent.html":{}}}],["edu_image",{"_index":536,"title":{},"body":{"injectables/EducationService.html":{}}}],["edu_type",{"_index":462,"title":{},"body":{"interfaces/Education.html":{},"components/EducationComponent.html":{}}}],["educacion",{"_index":559,"title":{},"body":{"injectables/EducationService.html":{}}}],["educación",{"_index":524,"title":{},"body":{"components/EducationComponent.html":{}}}],["education",{"_index":457,"title":{"interfaces/Education.html":{}},"body":{"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/PersonComponent.html":{},"coverage.html":{}}}],["education'},{'name",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["education).subscribe",{"_index":520,"title":{},"body":{"components/EducationComponent.html":{}}}],["education.career",{"_index":507,"title":{},"body":{"components/EducationComponent.html":{}}}],["education.component.css",{"_index":467,"title":{},"body":{"components/EducationComponent.html":{}}}],["education.component.html",{"_index":468,"title":{},"body":{"components/EducationComponent.html":{}}}],["education.dateend",{"_index":512,"title":{},"body":{"components/EducationComponent.html":{}}}],["education.datestart",{"_index":511,"title":{},"body":{"components/EducationComponent.html":{}}}],["education.edu_type",{"_index":509,"title":{},"body":{"components/EducationComponent.html":{}}}],["education.id",{"_index":504,"title":{},"body":{"components/EducationComponent.html":{}}}],["education.school_name",{"_index":505,"title":{},"body":{"components/EducationComponent.html":{}}}],["education.score",{"_index":510,"title":{},"body":{"components/EducationComponent.html":{}}}],["education.title",{"_index":506,"title":{},"body":{"components/EducationComponent.html":{}}}],["education.url",{"_index":513,"title":{},"body":{"components/EducationComponent.html":{}}}],["education.url_img",{"_index":508,"title":{},"body":{"components/EducationComponent.html":{}}}],["educationcomponent",{"_index":152,"title":{"components/EducationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["educationlist",{"_index":469,"title":{},"body":{"components/EducationComponent.html":{}}}],["educationservice",{"_index":475,"title":{"injectables/EducationService.html":{}},"body":{"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/PersonComponent.html":{},"coverage.html":{}}}],["eduform",{"_index":470,"title":{},"body":{"components/EducationComponent.html":{}}}],["eduimage",{"_index":699,"title":{},"body":{"components/PersonComponent.html":{}}}],["el",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["element",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["email",{"_index":664,"title":{},"body":{"interfaces/Login.html":{},"components/PersonComponent.html":{}}}],["en",{"_index":806,"title":{},"body":{"components/PersonComponent.html":{}}}],["encontrada",{"_index":674,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["encontrar",{"_index":804,"title":{},"body":{"components/PersonComponent.html":{}}}],["end",{"_index":1006,"title":{},"body":{"index.html":{}}}],["environment",{"_index":206,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apibaseurl",{"_index":189,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["es",{"_index":813,"title":{},"body":{"components/PersonComponent.html":{}}}],["est",{"_index":447,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["estilo",{"_index":682,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["even",{"_index":678,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["event",{"_index":730,"title":{},"body":{"components/PersonComponent.html":{}}}],["execute",{"_index":1003,"title":{},"body":{"index.html":{}}}],["exp.company_name",{"_index":616,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["exp.dateend",{"_index":619,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["exp.datestart",{"_index":618,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["exp.job_position",{"_index":615,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["exp.job_type",{"_index":617,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["exp.url",{"_index":620,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experience",{"_index":561,"title":{"interfaces/Experience.html":{}},"body":{"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/PersonComponent.html":{},"coverage.html":{}}}],["experience'},{'name",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["experience).subscribe",{"_index":610,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experience.company_name",{"_index":598,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experience.component.css",{"_index":567,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experience.component.html",{"_index":568,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experience.dateend",{"_index":602,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experience.datestart",{"_index":601,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experience.id",{"_index":596,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experience.job_position",{"_index":597,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experience.job_type",{"_index":600,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experience.url",{"_index":603,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experience.url_img",{"_index":599,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experiencecomponent",{"_index":154,"title":{"components/ExperienceComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["experiencelist",{"_index":569,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["experienceservice",{"_index":575,"title":{"injectables/ExperienceService.html":{}},"body":{"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/PersonComponent.html":{},"coverage.html":{}}}],["experiencia",{"_index":614,"title":{},"body":{"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{}}}],["expform",{"_index":570,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["expimage",{"_index":700,"title":{},"body":{"components/PersonComponent.html":{}}}],["export",{"_index":14,"title":{},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/NotFoundComponent.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["exports",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["expposition",{"_index":701,"title":{},"body":{"components/PersonComponent.html":{}}}],["false",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":830,"title":{},"body":{"components/PersonComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/NotFoundComponent.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"coverage.html":{}}}],["files",{"_index":988,"title":{},"body":{"index.html":{}}}],["find",{"_index":676,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["first",{"_index":1012,"title":{},"body":{"index.html":{}}}],["flex",{"_index":844,"title":{},"body":{"components/PersonComponent.html":{}}}],["font",{"_index":827,"title":{},"body":{"components/PersonComponent.html":{}}}],["form",{"_index":199,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["formbuilder",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["formgroup",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["formsmodule",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":668,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["found.component",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["found.component.css",{"_index":669,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.html",{"_index":670,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":667,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:13",{"_index":672,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:9",{"_index":671,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["full",{"_index":366,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1016,"title":{},"body":{"index.html":{}}}],["generate",{"_index":991,"title":{},"body":{"index.html":{}}}],["generated",{"_index":974,"title":{},"body":{"index.html":{}}}],["getall",{"_index":172,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["getbyid",{"_index":173,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["getbyid(id",{"_index":183,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["getemail",{"_index":745,"title":{},"body":{"components/PersonComponent.html":{}}}],["getpassword",{"_index":747,"title":{},"body":{"components/PersonComponent.html":{}}}],["getting",{"_index":970,"title":{"index.html":{}},"body":{}}],["go",{"_index":1019,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1026,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["green",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/SkillsComponent.html":{}}}],["h3",{"_index":826,"title":{},"body":{"components/PersonComponent.html":{}}}],["habilidades",{"_index":921,"title":{},"body":{"components/SkillsComponent.html":{}}}],["headers",{"_index":192,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["height",{"_index":838,"title":{},"body":{"components/PersonComponent.html":{}}}],["help",{"_index":1017,"title":{},"body":{"index.html":{}}}],["home",{"_index":363,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["home.component.css",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":156,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["href",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["http",{"_index":178,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"components/NotFoundComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["httpclient",{"_index":176,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"components/NotFoundComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["httpclientmodule",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":202,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["httpheaders().set('content",{"_index":194,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["httpoptions",{"_index":170,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["https://localhost:4200",{"_index":984,"title":{},"body":{"index.html":{}}}],["https://orona",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":8,"title":{},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["id:number",{"_index":15,"title":{},"body":{"interfaces/About.html":{},"interfaces/Aptitude.html":{},"interfaces/Education.html":{},"interfaces/Experience.html":{},"interfaces/Person.html":{},"interfaces/Progressbar.html":{}}}],["identifier",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":836,"title":{},"body":{"components/PersonComponent.html":{}}}],["implements",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"index.html":{}}}],["import",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["imports",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"interfaces/Login.html":{},"components/NotFoundComponent.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/NotFoundComponent.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["información",{"_index":846,"title":{},"body":{"components/PersonComponent.html":{}}}],["iniciar",{"_index":818,"title":{},"body":{"components/PersonComponent.html":{}}}],["inject",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(app_base_href",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":166,"title":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"coverage.html":{}}}],["injectables",{"_index":167,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"overview.html":{}}}],["interest",{"_index":692,"title":{},"body":{"interfaces/Person.html":{},"components/PersonComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/About.html":{},"interfaces/Achievement.html":{},"interfaces/Aptitude.html":{},"interfaces/Education.html":{},"interfaces/Experience.html":{},"interfaces/Login.html":{},"interfaces/Person.html":{},"interfaces/Progressbar.html":{}},"body":{"interfaces/About.html":{},"interfaces/Achievement.html":{},"interfaces/Aptitude.html":{},"interfaces/Education.html":{},"interfaces/Experience.html":{},"interfaces/Login.html":{},"interfaces/Person.html":{},"interfaces/Progressbar.html":{},"coverage.html":{}}}],["interfaces",{"_index":1,"title":{},"body":{"interfaces/About.html":{},"interfaces/Achievement.html":{},"interfaces/Aptitude.html":{},"interfaces/Education.html":{},"interfaces/Experience.html":{},"interfaces/Login.html":{},"interfaces/Person.html":{},"interfaces/Progressbar.html":{},"overview.html":{}}}],["interpolacion",{"_index":656,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["interpolación",{"_index":558,"title":{},"body":{"injectables/EducationService.html":{}}}],["invalid:not(form",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/SkillsComponent.html":{}}}],["isuserlogged",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["item",{"_index":273,"title":{},"body":{"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/SkillsComponent.html":{}}}],["item.description}}{{item.url",{"_index":280,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["item.lastname",{"_index":845,"title":{},"body":{"components/PersonComponent.html":{}}}],["item.location",{"_index":823,"title":{},"body":{"components/PersonComponent.html":{}}}],["item.name",{"_index":276,"title":{},"body":{"components/AchievementsComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["item.name}}&nbsp;&nbsp;{{item.lastname",{"_index":821,"title":{},"body":{"components/PersonComponent.html":{}}}],["item.number",{"_index":924,"title":{},"body":{"components/SkillsComponent.html":{}}}],["item.project_type",{"_index":279,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["item.quote",{"_index":925,"title":{},"body":{"components/SkillsComponent.html":{}}}],["item.text",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{}}}],["job_image",{"_index":624,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["job_position",{"_index":564,"title":{},"body":{"interfaces/Experience.html":{},"components/ExperienceComponent.html":{}}}],["job_type",{"_index":565,"title":{},"body":{"interfaces/Experience.html":{},"components/ExperienceComponent.html":{}}}],["json",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["jumbotron",{"_index":834,"title":{},"body":{"components/PersonComponent.html":{}}}],["karma",{"_index":1005,"title":{},"body":{"index.html":{}}}],["la",{"_index":807,"title":{},"body":{"components/PersonComponent.html":{}}}],["lastname",{"_index":693,"title":{},"body":{"interfaces/Person.html":{},"components/PersonComponent.html":{}}}],["left",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/NotFoundComponent.html":{},"components/SkillsComponent.html":{}}}],["legend",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"overview.html":{}}}],["limpiar",{"_index":817,"title":{},"body":{"components/PersonComponent.html":{}}}],["literal",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadform",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["loadform(about",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["loadform(achievement",{"_index":238,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["loadform(aptitude",{"_index":396,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["loadform(education",{"_index":478,"title":{},"body":{"components/EducationComponent.html":{}}}],["loadform(experience",{"_index":578,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["loadform(person",{"_index":720,"title":{},"body":{"components/PersonComponent.html":{}}}],["loadform(progressbar",{"_index":887,"title":{},"body":{"components/SkillsComponent.html":{}}}],["location",{"_index":694,"title":{},"body":{"interfaces/Person.html":{},"components/PersonComponent.html":{}}}],["login",{"_index":432,"title":{"interfaces/Login.html":{}},"body":{"injectables/AuthServiceService.html":{},"interfaces/Login.html":{},"components/PersonComponent.html":{},"coverage.html":{}}}],["login(credentials",{"_index":436,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["loginerror",{"_index":702,"title":{},"body":{"components/PersonComponent.html":{}}}],["loginform",{"_index":703,"title":{},"body":{"components/PersonComponent.html":{}}}],["logout",{"_index":433,"title":{},"body":{"injectables/AuthServiceService.html":{},"components/PersonComponent.html":{}}}],["logros",{"_index":275,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["margin",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["matching",{"_index":17,"title":{},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/NotFoundComponent.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":389,"title":{},"body":{"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/SkillsComponent.html":{}}}],["metadata",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["methods",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["miscellaneous",{"_index":1033,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/about",{"_index":205,"title":{},"body":{"injectables/AboutService.html":{}}}],["models/achievement",{"_index":291,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["models/aptitude",{"_index":382,"title":{},"body":{"injectables/AptitudeService.html":{}}}],["models/education",{"_index":556,"title":{},"body":{"injectables/EducationService.html":{}}}],["models/experience",{"_index":655,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["models/login",{"_index":443,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["models/person",{"_index":857,"title":{},"body":{"injectables/PersonaService.html":{}}}],["models/progressbar",{"_index":875,"title":{},"body":{"injectables/ProgressbarService.html":{}}}],["module",{"_index":316,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":318,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1018,"title":{},"body":{"index.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"index.html":{}}}],["name:string",{"_index":861,"title":{},"body":{"interfaces/Progressbar.html":{}}}],["navigate",{"_index":983,"title":{},"body":{"index.html":{}}}],["nbsp;información",{"_index":824,"title":{},"body":{"components/PersonComponent.html":{}}}],["need",{"_index":1011,"title":{},"body":{"index.html":{}}}],["new",{"_index":193,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"coverage.html":{},"index.html":{}}}],["newabout",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{}}}],["newachievement",{"_index":267,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["newaptitude",{"_index":422,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["neweducation",{"_index":517,"title":{},"body":{"components/EducationComponent.html":{}}}],["newexperience",{"_index":607,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["newperson",{"_index":785,"title":{},"body":{"components/PersonComponent.html":{}}}],["newprogressbar",{"_index":914,"title":{},"body":{"components/SkillsComponent.html":{}}}],["ng",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/SkillsComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["ngx",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["notfoundcomponent",{"_index":158,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["null",{"_index":456,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["object",{"_index":191,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":181,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["ondeleteabout",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["ondeleteabout(index",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["ondeleteachievement",{"_index":230,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["ondeleteachievement(index",{"_index":241,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["ondeleteaptitude",{"_index":390,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["ondeleteaptitude(index",{"_index":399,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["ondeleteeducation",{"_index":471,"title":{},"body":{"components/EducationComponent.html":{}}}],["ondeleteeducation(index",{"_index":481,"title":{},"body":{"components/EducationComponent.html":{}}}],["ondeleteexperience",{"_index":571,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["ondeleteexperience(index",{"_index":581,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["ondeleteperson",{"_index":708,"title":{},"body":{"components/PersonComponent.html":{}}}],["ondeleteperson(index",{"_index":724,"title":{},"body":{"components/PersonComponent.html":{}}}],["ondeleteprogressbar",{"_index":881,"title":{},"body":{"components/SkillsComponent.html":{}}}],["ondeleteprogressbar(index",{"_index":890,"title":{},"body":{"components/SkillsComponent.html":{}}}],["oneditabout",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{}}}],["oneditabout(index",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["oneditachievement",{"_index":231,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["oneditachievement(index",{"_index":243,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["oneditaptitude",{"_index":391,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["oneditaptitude(index",{"_index":401,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["onediteducation",{"_index":472,"title":{},"body":{"components/EducationComponent.html":{}}}],["onediteducation(index",{"_index":483,"title":{},"body":{"components/EducationComponent.html":{}}}],["oneditexperience",{"_index":572,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["oneditexperience(index",{"_index":583,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["oneditperson",{"_index":709,"title":{},"body":{"components/PersonComponent.html":{}}}],["oneditperson(index",{"_index":726,"title":{},"body":{"components/PersonComponent.html":{}}}],["oneditprogressbar",{"_index":882,"title":{},"body":{"components/SkillsComponent.html":{}}}],["oneditprogressbar(index",{"_index":892,"title":{},"body":{"components/SkillsComponent.html":{}}}],["oninit",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["onnewabout",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{}}}],["onnewachievement",{"_index":232,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["onnewaptitude",{"_index":392,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["onneweducation",{"_index":473,"title":{},"body":{"components/EducationComponent.html":{}}}],["onnewexperience",{"_index":573,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["onnewperson",{"_index":710,"title":{},"body":{"components/PersonComponent.html":{}}}],["onnewprogressbar",{"_index":883,"title":{},"body":{"components/SkillsComponent.html":{}}}],["onsub",{"_index":711,"title":{},"body":{"components/PersonComponent.html":{}}}],["onsub(e",{"_index":729,"title":{},"body":{"components/PersonComponent.html":{}}}],["onsubmit",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["onsubmit(id",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["optional",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["orona",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1021,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":953,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":677,"title":{},"body":{"components/NotFoundComponent.html":{},"index.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["password",{"_index":665,"title":{},"body":{"interfaces/Login.html":{},"components/PersonComponent.html":{}}}],["path",{"_index":362,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":365,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["person",{"_index":688,"title":{"interfaces/Person.html":{}},"body":{"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"coverage.html":{}}}],["person'},{'name",{"_index":161,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["person).subscribe",{"_index":788,"title":{},"body":{"components/PersonComponent.html":{}}}],["person.birthday",{"_index":780,"title":{},"body":{"components/PersonComponent.html":{}}}],["person.component.css",{"_index":696,"title":{},"body":{"components/PersonComponent.html":{}}}],["person.component.html",{"_index":697,"title":{},"body":{"components/PersonComponent.html":{}}}],["person.cuit",{"_index":777,"title":{},"body":{"components/PersonComponent.html":{}}}],["person.id",{"_index":774,"title":{},"body":{"components/PersonComponent.html":{}}}],["person.interest",{"_index":779,"title":{},"body":{"components/PersonComponent.html":{}}}],["person.lastname",{"_index":776,"title":{},"body":{"components/PersonComponent.html":{}}}],["person.location",{"_index":781,"title":{},"body":{"components/PersonComponent.html":{}}}],["person.name",{"_index":775,"title":{},"body":{"components/PersonComponent.html":{}}}],["person.url_img",{"_index":778,"title":{},"body":{"components/PersonComponent.html":{}}}],["persona",{"_index":560,"title":{},"body":{"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"components/PersonComponent.html":{}}}],["personaservice",{"_index":715,"title":{"injectables/PersonaService.html":{}},"body":{"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"coverage.html":{}}}],["personcomponent",{"_index":160,"title":{"components/PersonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["personform",{"_index":704,"title":{},"body":{"components/PersonComponent.html":{}}}],["personlist",{"_index":705,"title":{},"body":{"components/PersonComponent.html":{}}}],["platform",{"_index":1008,"title":{},"body":{"index.html":{}}}],["poppins",{"_index":831,"title":{},"body":{"components/PersonComponent.html":{}}}],["portfolio",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["portfoliobackend.herokuapp.com",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["position",{"_index":625,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["private",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["production",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progresos",{"_index":922,"title":{},"body":{"components/SkillsComponent.html":{}}}],["progress",{"_index":872,"title":{},"body":{"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["progressbar",{"_index":858,"title":{"interfaces/Progressbar.html":{}},"body":{"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"coverage.html":{}}}],["progressbar).subscribe",{"_index":917,"title":{},"body":{"components/SkillsComponent.html":{}}}],["progressbar.id",{"_index":907,"title":{},"body":{"components/SkillsComponent.html":{}}}],["progressbar.name",{"_index":908,"title":{},"body":{"components/SkillsComponent.html":{}}}],["progressbar.number",{"_index":910,"title":{},"body":{"components/SkillsComponent.html":{}}}],["progressbar.quote",{"_index":909,"title":{},"body":{"components/SkillsComponent.html":{}}}],["progressbarservice",{"_index":863,"title":{"injectables/ProgressbarService.html":{}},"body":{"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"coverage.html":{}}}],["progressform",{"_index":879,"title":{},"body":{"components/SkillsComponent.html":{}}}],["progresslist",{"_index":880,"title":{},"body":{"components/SkillsComponent.html":{}}}],["project",{"_index":973,"title":{},"body":{"index.html":{}}}],["project_type",{"_index":222,"title":{},"body":{"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{}}}],["properties",{"_index":7,"title":{"properties.html":{}},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"interfaces/Login.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"properties.html":{}}}],["provide",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":208,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["providers",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["proyecto",{"_index":278,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["proyectocv",{"_index":972,"title":{},"body":{"index.html":{}}}],["prueba",{"_index":557,"title":{},"body":{"injectables/EducationService.html":{},"injectables/ExperienceService.html":{}}}],["public",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["pudo",{"_index":803,"title":{},"body":{"components/PersonComponent.html":{}}}],["página",{"_index":673,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["que",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["quote",{"_index":860,"title":{},"body":{"interfaces/Progressbar.html":{},"components/SkillsComponent.html":{}}}],["quote:string",{"_index":862,"title":{},"body":{"interfaces/Progressbar.html":{}}}],["ray",{"_index":680,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["reactiveformsmodule",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["red",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/SkillsComponent.html":{}}}],["redirectto",{"_index":364,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1022,"title":{},"body":{"index.html":{}}}],["reload",{"_index":986,"title":{},"body":{"index.html":{}}}],["reloaddata",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["requerida",{"_index":816,"title":{},"body":{"components/PersonComponent.html":{}}}],["requerido",{"_index":814,"title":{},"body":{"components/PersonComponent.html":{}}}],["require",{"_index":950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":452,"title":{},"body":{"injectables/AuthServiceService.html":{},"components/PersonComponent.html":{}}}],["results",{"_index":16,"title":{},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/NotFoundComponent.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":211,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["returns",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["root",{"_index":209,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["root'},{'name",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["router",{"_index":716,"title":{},"body":{"components/PersonComponent.html":{}}}],["routermodule",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":367,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":359,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":357,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":980,"title":{},"body":{"index.html":{}}}],["running",{"_index":999,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":204,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"dependencies.html":{}}}],["sans",{"_index":832,"title":{},"body":{"components/PersonComponent.html":{}}}],["save",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{}}}],["save(about",{"_index":185,"title":{},"body":{"injectables/AboutService.html":{}}}],["save(achievement",{"_index":286,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["save(aptitude",{"_index":377,"title":{},"body":{"injectables/AptitudeService.html":{}}}],["save(education",{"_index":541,"title":{},"body":{"injectables/EducationService.html":{}}}],["save(experience",{"_index":639,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["save(person",{"_index":852,"title":{},"body":{"injectables/PersonaService.html":{}}}],["save(progressbar",{"_index":869,"title":{},"body":{"injectables/ProgressbarService.html":{}}}],["scaffolding",{"_index":990,"title":{},"body":{"index.html":{}}}],["school_name",{"_index":463,"title":{},"body":{"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{}}}],["schoolname",{"_index":706,"title":{},"body":{"components/PersonComponent.html":{}}}],["score",{"_index":464,"title":{},"body":{"interfaces/Education.html":{},"components/EducationComponent.html":{}}}],["se",{"_index":802,"title":{},"body":{"components/PersonComponent.html":{}}}],["seguro",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["seleccionado",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["selector",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["serif",{"_index":833,"title":{},"body":{"components/PersonComponent.html":{}}}],["serve",{"_index":981,"title":{},"body":{"index.html":{}}}],["server",{"_index":959,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["service.service",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["service.service.ts",{"_index":431,"title":{},"body":{"injectables/AuthServiceService.html":{},"coverage.html":{}}}],["service.service.ts:11",{"_index":440,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["service.service.ts:13",{"_index":441,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["service.service.ts:16",{"_index":434,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["service.service.ts:23",{"_index":437,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["service.service.ts:32",{"_index":439,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["service.service.ts:36",{"_index":435,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["servicio",{"_index":445,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["sesión",{"_index":819,"title":{},"body":{"components/PersonComponent.html":{}}}],["sessionstorage.getitem(\"user",{"_index":455,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["sessionstorage.removeitem(\"user",{"_index":454,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["sessionstorage.setitem(\"user",{"_index":453,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["set('content",{"_index":196,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["size",{"_index":841,"title":{},"body":{"components/PersonComponent.html":{}}}],["skills",{"_index":163,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["skills.component.css",{"_index":877,"title":{},"body":{"components/SkillsComponent.html":{}}}],["skills.component.html",{"_index":878,"title":{},"body":{"components/SkillsComponent.html":{}}}],["skillscomponent",{"_index":162,"title":{"components/SkillsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["solid",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/SkillsComponent.html":{}}}],["source",{"_index":3,"title":{},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/HomeComponent.html":{},"interfaces/Login.html":{},"components/NotFoundComponent.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"index.html":{}}}],["spec\\.ts",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":356,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/about/about.component.ts",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/components/about/about.component.ts:14",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:15",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:16",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:29",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:34",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:42",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:49",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:56",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:73",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:77",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/about/about.component.ts:82",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/components/achievements/achievements.component.ts",{"_index":224,"title":{},"body":{"components/AchievementsComponent.html":{},"coverage.html":{}}}],["src/app/components/achievements/achievements.component.ts:13",{"_index":249,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/components/achievements/achievements.component.ts:14",{"_index":248,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/components/achievements/achievements.component.ts:15",{"_index":235,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/components/achievements/achievements.component.ts:31",{"_index":240,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/components/achievements/achievements.component.ts:37",{"_index":247,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/components/achievements/achievements.component.ts:45",{"_index":237,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/components/achievements/achievements.component.ts:55",{"_index":239,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/components/achievements/achievements.component.ts:65",{"_index":246,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/components/achievements/achievements.component.ts:82",{"_index":245,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/components/achievements/achievements.component.ts:86",{"_index":244,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/components/achievements/achievements.component.ts:91",{"_index":242,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts",{"_index":383,"title":{},"body":{"components/AptitudesComponent.html":{},"coverage.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts:13",{"_index":407,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts:14",{"_index":406,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts:15",{"_index":408,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts:17",{"_index":394,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts:33",{"_index":398,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts:39",{"_index":405,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts:47",{"_index":395,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts:56",{"_index":397,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts:65",{"_index":404,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts:82",{"_index":403,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts:86",{"_index":402,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/components/aptitudes/aptitudes.component.ts:91",{"_index":400,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/components/education/education.component.ts",{"_index":466,"title":{},"body":{"components/EducationComponent.html":{},"coverage.html":{}}}],["src/app/components/education/education.component.ts:100",{"_index":485,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/components/education/education.component.ts:104",{"_index":484,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/components/education/education.component.ts:109",{"_index":482,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/components/education/education.component.ts:13",{"_index":488,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/components/education/education.component.ts:14",{"_index":489,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/components/education/education.component.ts:15",{"_index":490,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/components/education/education.component.ts:17",{"_index":476,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/components/education/education.component.ts:39",{"_index":480,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/components/education/education.component.ts:45",{"_index":487,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/components/education/education.component.ts:53",{"_index":477,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/components/education/education.component.ts:68",{"_index":479,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/components/education/education.component.ts:83",{"_index":486,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/components/experience/experience.component.ts",{"_index":566,"title":{},"body":{"components/ExperienceComponent.html":{},"coverage.html":{}}}],["src/app/components/experience/experience.component.ts:100",{"_index":582,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["src/app/components/experience/experience.component.ts:13",{"_index":588,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["src/app/components/experience/experience.component.ts:14",{"_index":589,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["src/app/components/experience/experience.component.ts:15",{"_index":576,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["src/app/components/experience/experience.component.ts:35",{"_index":580,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["src/app/components/experience/experience.component.ts:40",{"_index":587,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["src/app/components/experience/experience.component.ts:48",{"_index":577,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["src/app/components/experience/experience.component.ts:61",{"_index":579,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["src/app/components/experience/experience.component.ts:74",{"_index":586,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["src/app/components/experience/experience.component.ts:91",{"_index":585,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["src/app/components/experience/experience.component.ts:95",{"_index":584,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/not",{"_index":666,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/components/person/person.component.ts",{"_index":695,"title":{},"body":{"components/PersonComponent.html":{},"coverage.html":{}}}],["src/app/components/person/person.component.ts:100",{"_index":721,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:113",{"_index":733,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:130",{"_index":722,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:136",{"_index":728,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:140",{"_index":727,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:145",{"_index":725,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:158",{"_index":735,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:162",{"_index":731,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:17",{"_index":743,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:176",{"_index":746,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:179",{"_index":748,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:18",{"_index":742,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:183",{"_index":718,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:19",{"_index":741,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:20",{"_index":740,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:21",{"_index":739,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:25",{"_index":736,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:26",{"_index":738,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:27",{"_index":737,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:28",{"_index":744,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:29",{"_index":717,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:74",{"_index":723,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:79",{"_index":734,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/person/person.component.ts:87",{"_index":719,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/components/skills/skills.component.ts",{"_index":876,"title":{},"body":{"components/SkillsComponent.html":{},"coverage.html":{}}}],["src/app/components/skills/skills.component.ts:13",{"_index":899,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/components/skills/skills.component.ts:14",{"_index":898,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/components/skills/skills.component.ts:15",{"_index":897,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/components/skills/skills.component.ts:17",{"_index":885,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/components/skills/skills.component.ts:34",{"_index":889,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/components/skills/skills.component.ts:40",{"_index":896,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/components/skills/skills.component.ts:48",{"_index":886,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/components/skills/skills.component.ts:57",{"_index":888,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/components/skills/skills.component.ts:66",{"_index":895,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/components/skills/skills.component.ts:83",{"_index":894,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/components/skills/skills.component.ts:87",{"_index":893,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/components/skills/skills.component.ts:92",{"_index":891,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/models/about",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/models/about.ts",{"_index":5,"title":{},"body":{"interfaces/About.html":{},"coverage.html":{}}}],["src/app/models/achievement",{"_index":250,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/models/achievement.ts",{"_index":220,"title":{},"body":{"interfaces/Achievement.html":{},"coverage.html":{}}}],["src/app/models/aptitude",{"_index":409,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/models/aptitude.ts",{"_index":369,"title":{},"body":{"interfaces/Aptitude.html":{},"coverage.html":{}}}],["src/app/models/education",{"_index":491,"title":{},"body":{"components/EducationComponent.html":{}}}],["src/app/models/education.ts",{"_index":458,"title":{},"body":{"interfaces/Education.html":{},"coverage.html":{}}}],["src/app/models/experience",{"_index":590,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["src/app/models/experience.ts",{"_index":562,"title":{},"body":{"interfaces/Experience.html":{},"coverage.html":{}}}],["src/app/models/login.ts",{"_index":663,"title":{},"body":{"interfaces/Login.html":{},"coverage.html":{}}}],["src/app/models/person",{"_index":749,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/models/person.ts",{"_index":689,"title":{},"body":{"interfaces/Person.html":{},"coverage.html":{}}}],["src/app/models/progressbar",{"_index":900,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/models/progressbar.ts",{"_index":859,"title":{},"body":{"interfaces/Progressbar.html":{},"coverage.html":{}}}],["src/app/services/about.service",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/services/about.service.ts",{"_index":168,"title":{},"body":{"injectables/AboutService.html":{},"coverage.html":{}}}],["src/app/services/about.service.ts:12",{"_index":190,"title":{},"body":{"injectables/AboutService.html":{}}}],["src/app/services/about.service.ts:14",{"_index":201,"title":{},"body":{"injectables/AboutService.html":{}}}],["src/app/services/about.service.ts:17",{"_index":177,"title":{},"body":{"injectables/AboutService.html":{}}}],["src/app/services/about.service.ts:22",{"_index":182,"title":{},"body":{"injectables/AboutService.html":{}}}],["src/app/services/about.service.ts:26",{"_index":184,"title":{},"body":{"injectables/AboutService.html":{}}}],["src/app/services/about.service.ts:30",{"_index":186,"title":{},"body":{"injectables/AboutService.html":{}}}],["src/app/services/about.service.ts:34",{"_index":188,"title":{},"body":{"injectables/AboutService.html":{}}}],["src/app/services/about.service.ts:38",{"_index":180,"title":{},"body":{"injectables/AboutService.html":{}}}],["src/app/services/achievements.service",{"_index":251,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["src/app/services/achievements.service.ts",{"_index":281,"title":{},"body":{"injectables/AchievementsService.html":{},"coverage.html":{}}}],["src/app/services/achievements.service.ts:11",{"_index":289,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:13",{"_index":290,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:16",{"_index":282,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:21",{"_index":284,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:25",{"_index":285,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:29",{"_index":287,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:33",{"_index":288,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:37",{"_index":283,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/aptitude.service",{"_index":410,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["src/app/services/aptitude.service.ts",{"_index":372,"title":{},"body":{"injectables/AptitudeService.html":{},"coverage.html":{}}}],["src/app/services/aptitude.service.ts:12",{"_index":380,"title":{},"body":{"injectables/AptitudeService.html":{}}}],["src/app/services/aptitude.service.ts:14",{"_index":381,"title":{},"body":{"injectables/AptitudeService.html":{}}}],["src/app/services/aptitude.service.ts:17",{"_index":373,"title":{},"body":{"injectables/AptitudeService.html":{}}}],["src/app/services/aptitude.service.ts:23",{"_index":375,"title":{},"body":{"injectables/AptitudeService.html":{}}}],["src/app/services/aptitude.service.ts:27",{"_index":376,"title":{},"body":{"injectables/AptitudeService.html":{}}}],["src/app/services/aptitude.service.ts:31",{"_index":378,"title":{},"body":{"injectables/AptitudeService.html":{}}}],["src/app/services/aptitude.service.ts:35",{"_index":379,"title":{},"body":{"injectables/AptitudeService.html":{}}}],["src/app/services/aptitude.service.ts:39",{"_index":374,"title":{},"body":{"injectables/AptitudeService.html":{}}}],["src/app/services/auth",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{},"coverage.html":{}}}],["src/app/services/education.service",{"_index":492,"title":{},"body":{"components/EducationComponent.html":{},"components/PersonComponent.html":{}}}],["src/app/services/education.service.ts",{"_index":533,"title":{},"body":{"injectables/EducationService.html":{},"coverage.html":{}}}],["src/app/services/education.service.ts:11",{"_index":544,"title":{},"body":{"injectables/EducationService.html":{}}}],["src/app/services/education.service.ts:13",{"_index":550,"title":{},"body":{"injectables/EducationService.html":{}}}],["src/app/services/education.service.ts:20",{"_index":554,"title":{},"body":{"injectables/EducationService.html":{}}}],["src/app/services/education.service.ts:21",{"_index":549,"title":{},"body":{"injectables/EducationService.html":{}}}],["src/app/services/education.service.ts:22",{"_index":547,"title":{},"body":{"injectables/EducationService.html":{}}}],["src/app/services/education.service.ts:23",{"_index":537,"title":{},"body":{"injectables/EducationService.html":{}}}],["src/app/services/education.service.ts:28",{"_index":539,"title":{},"body":{"injectables/EducationService.html":{}}}],["src/app/services/education.service.ts:32",{"_index":540,"title":{},"body":{"injectables/EducationService.html":{}}}],["src/app/services/education.service.ts:36",{"_index":542,"title":{},"body":{"injectables/EducationService.html":{}}}],["src/app/services/education.service.ts:40",{"_index":543,"title":{},"body":{"injectables/EducationService.html":{}}}],["src/app/services/education.service.ts:44",{"_index":538,"title":{},"body":{"injectables/EducationService.html":{}}}],["src/app/services/experience.service",{"_index":591,"title":{},"body":{"components/ExperienceComponent.html":{},"components/PersonComponent.html":{}}}],["src/app/services/experience.service.ts",{"_index":621,"title":{},"body":{"injectables/ExperienceService.html":{},"coverage.html":{}}}],["src/app/services/experience.service.ts:13",{"_index":642,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:15",{"_index":650,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:22",{"_index":652,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:23",{"_index":644,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:24",{"_index":654,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:25",{"_index":646,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:26",{"_index":649,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:27",{"_index":629,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:32",{"_index":637,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:36",{"_index":638,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:40",{"_index":640,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:44",{"_index":641,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:48",{"_index":636,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:53",{"_index":631,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:57",{"_index":635,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/experience.service.ts:61",{"_index":633,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["src/app/services/person.service",{"_index":750,"title":{},"body":{"components/PersonComponent.html":{}}}],["src/app/services/person.service.ts",{"_index":847,"title":{},"body":{"injectables/PersonaService.html":{},"coverage.html":{}}}],["src/app/services/person.service.ts:11",{"_index":855,"title":{},"body":{"injectables/PersonaService.html":{}}}],["src/app/services/person.service.ts:13",{"_index":856,"title":{},"body":{"injectables/PersonaService.html":{}}}],["src/app/services/person.service.ts:16",{"_index":848,"title":{},"body":{"injectables/PersonaService.html":{}}}],["src/app/services/person.service.ts:21",{"_index":850,"title":{},"body":{"injectables/PersonaService.html":{}}}],["src/app/services/person.service.ts:25",{"_index":851,"title":{},"body":{"injectables/PersonaService.html":{}}}],["src/app/services/person.service.ts:29",{"_index":853,"title":{},"body":{"injectables/PersonaService.html":{}}}],["src/app/services/person.service.ts:33",{"_index":854,"title":{},"body":{"injectables/PersonaService.html":{}}}],["src/app/services/person.service.ts:37",{"_index":849,"title":{},"body":{"injectables/PersonaService.html":{}}}],["src/app/services/progressbar.service",{"_index":901,"title":{},"body":{"components/SkillsComponent.html":{}}}],["src/app/services/progressbar.service.ts",{"_index":864,"title":{},"body":{"injectables/ProgressbarService.html":{},"coverage.html":{}}}],["src/app/services/progressbar.service.ts:12",{"_index":873,"title":{},"body":{"injectables/ProgressbarService.html":{}}}],["src/app/services/progressbar.service.ts:14",{"_index":874,"title":{},"body":{"injectables/ProgressbarService.html":{}}}],["src/app/services/progressbar.service.ts:17",{"_index":865,"title":{},"body":{"injectables/ProgressbarService.html":{}}}],["src/app/services/progressbar.service.ts:22",{"_index":867,"title":{},"body":{"injectables/ProgressbarService.html":{}}}],["src/app/services/progressbar.service.ts:26",{"_index":868,"title":{},"body":{"injectables/ProgressbarService.html":{}}}],["src/app/services/progressbar.service.ts:30",{"_index":870,"title":{},"body":{"injectables/ProgressbarService.html":{}}}],["src/app/services/progressbar.service.ts:34",{"_index":871,"title":{},"body":{"injectables/ProgressbarService.html":{}}}],["src/app/services/progressbar.service.ts:38",{"_index":866,"title":{},"body":{"injectables/ProgressbarService.html":{}}}],["src/environments/environment.prod",{"_index":207,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["src/environments/environment.prod.ts",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":971,"title":{"index.html":{}},"body":{}}],["statements",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":996,"title":{},"body":{"index.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/About.html":{},"interfaces/Achievement.html":{},"components/AppComponent.html":{},"interfaces/Aptitude.html":{},"interfaces/Education.html":{},"interfaces/Experience.html":{},"interfaces/Login.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"interfaces/Progressbar.html":{}}}],["styles",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["styleurls",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["support",{"_index":1023,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1024,"title":{},"body":{"modules.html":{}}}],["table",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":442,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["tap((response",{"_index":451,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["template",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["test",{"_index":1002,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1014,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1001,"title":{},"body":{"index.html":{}}}],["text",{"_index":9,"title":{},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{}}}],["texto",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/PersonComponent.html":{}}}],["this.aboutform",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.aboutform.get('id')?.value",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.aboutform.setvalue",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.aboutform.value",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.aboutlist",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.aboutlist.push(newabout",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.aboutlist[index",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.aboutservice.delete(about.id).subscribe",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.aboutservice.getall().subscribe",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.aboutservice.save(about).subscribe",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.aboutservice.update(id",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.achieveform",{"_index":252,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["this.achieveform.get('id')?.value",{"_index":265,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["this.achieveform.setvalue",{"_index":258,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["this.achieveform.value",{"_index":264,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["this.achievelist",{"_index":257,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["this.achievelist.push(newachievement",{"_index":268,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["this.achievelist[index",{"_index":271,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["this.achievementservice.delete(achievement.id).subscribe",{"_index":274,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["this.achievementservice.getall().subscribe",{"_index":256,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["this.achievementservice.save(achievement).subscribe",{"_index":266,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["this.achievementservice.update(id",{"_index":269,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["this.aptitudeform",{"_index":411,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["this.aptitudeform.get('id')?.value",{"_index":420,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["this.aptitudeform.setvalue",{"_index":414,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["this.aptitudeform.value",{"_index":419,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["this.aptitudelist",{"_index":413,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["this.aptitudelist.push(newaptitude",{"_index":423,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["this.aptitudelist[index",{"_index":426,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["this.aptitudeservice.delete(aptitude.id).subscribe",{"_index":428,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["this.aptitudeservice.getall().subscribe",{"_index":412,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["this.aptitudeservice.save(aptitude).subscribe",{"_index":421,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["this.aptitudeservice.update(id",{"_index":424,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["this.authservice.isuserlogged",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["this.authservice.login(this.loginform.value).subscribe",{"_index":797,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.authservice.logout",{"_index":789,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.basehref",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["this.clearform",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["this.company_name.asobservable",{"_index":645,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["this.company_name.next(value",{"_index":657,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["this.companyname",{"_index":756,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.edu_image.asobservable",{"_index":545,"title":{},"body":{"injectables/EducationService.html":{}}}],["this.educationlist",{"_index":501,"title":{},"body":{"components/EducationComponent.html":{}}}],["this.educationlist.push(neweducation",{"_index":518,"title":{},"body":{"components/EducationComponent.html":{}}}],["this.educationlist[index",{"_index":521,"title":{},"body":{"components/EducationComponent.html":{}}}],["this.educationservice.currentimage.subscribe(data",{"_index":763,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.educationservice.currentschool_name.subscribe(data",{"_index":761,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.educationservice.delete(education.id).subscribe",{"_index":523,"title":{},"body":{"components/EducationComponent.html":{}}}],["this.educationservice.getall().subscribe",{"_index":500,"title":{},"body":{"components/EducationComponent.html":{}}}],["this.educationservice.save(education).subscribe",{"_index":516,"title":{},"body":{"components/EducationComponent.html":{}}}],["this.educationservice.update(id",{"_index":519,"title":{},"body":{"components/EducationComponent.html":{}}}],["this.eduform",{"_index":493,"title":{},"body":{"components/EducationComponent.html":{}}}],["this.eduform.get('id')?.value",{"_index":515,"title":{},"body":{"components/EducationComponent.html":{}}}],["this.eduform.setvalue",{"_index":502,"title":{},"body":{"components/EducationComponent.html":{}}}],["this.eduform.value",{"_index":514,"title":{},"body":{"components/EducationComponent.html":{}}}],["this.eduimage",{"_index":764,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.experiencelist",{"_index":594,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["this.experiencelist.push(newexperience",{"_index":608,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["this.experiencelist[index",{"_index":611,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["this.experienceservice.currentcompany_name.subscribe(data",{"_index":755,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.experienceservice.currentimage.subscribe(data",{"_index":759,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.experienceservice.currentposition.subscribe(data",{"_index":757,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.experienceservice.delete(experience.id).subscribe",{"_index":613,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["this.experienceservice.getall().subscribe",{"_index":593,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["this.experienceservice.save(experience).subscribe",{"_index":606,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["this.experienceservice.update(id",{"_index":609,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["this.expform",{"_index":592,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["this.expform.get('id')?.value",{"_index":605,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["this.expform.setvalue",{"_index":595,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["this.expform.value",{"_index":604,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["this.expimage",{"_index":760,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.expposition",{"_index":758,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.formbuilder.group",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["this.http.delete(`${this.apiserverurl}/delete/${id",{"_index":218,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["this.http.get(`${this.apiserverurl}/all",{"_index":212,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["this.http.get(`${this.apiserverurl}/find/${id",{"_index":213,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["this.http.post(`${this.apiserverurl}/create",{"_index":215,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["this.http.post(`${this.apiserverurl}/login",{"_index":449,"title":{},"body":{"injectables/AuthServiceService.html":{}}}],["this.http.put(`${this.apiserverurl}/update/${id",{"_index":217,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["this.isuserlogged",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["this.job_image.asobservable",{"_index":647,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["this.job_image.next(value",{"_index":659,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["this.loadform(about",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.loadform(achievement",{"_index":272,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["this.loadform(aptitude",{"_index":427,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["this.loadform(education",{"_index":522,"title":{},"body":{"components/EducationComponent.html":{}}}],["this.loadform(experience",{"_index":612,"title":{},"body":{"components/ExperienceComponent.html":{}}}],["this.loadform(person",{"_index":792,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.loadform(progressbar",{"_index":919,"title":{},"body":{"components/SkillsComponent.html":{}}}],["this.loginerror",{"_index":799,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.loginform",{"_index":765,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.loginform.get('email",{"_index":809,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.loginform.get('password",{"_index":810,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.loginform.setvalue",{"_index":811,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.personaservice.delete(person.id).subscribe",{"_index":793,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.personaservice.getall().subscribe",{"_index":771,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.personaservice.save(person).subscribe",{"_index":784,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.personaservice.update(id",{"_index":787,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.personform",{"_index":751,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.personform.get('id')?.value",{"_index":783,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.personform.setvalue",{"_index":773,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.personform.value",{"_index":782,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.personlist",{"_index":772,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.personlist.push(newperson",{"_index":786,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.personlist[index",{"_index":791,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.position.asobservable",{"_index":648,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["this.position.next(value",{"_index":658,"title":{},"body":{"injectables/ExperienceService.html":{}}}],["this.progressbarservice.delete(progressbar.id).subscribe",{"_index":920,"title":{},"body":{"components/SkillsComponent.html":{}}}],["this.progressbarservice.getall().subscribe",{"_index":904,"title":{},"body":{"components/SkillsComponent.html":{}}}],["this.progressbarservice.save(progressbar).subscribe",{"_index":913,"title":{},"body":{"components/SkillsComponent.html":{}}}],["this.progressbarservice.update(id",{"_index":916,"title":{},"body":{"components/SkillsComponent.html":{}}}],["this.progressform",{"_index":902,"title":{},"body":{"components/SkillsComponent.html":{}}}],["this.progressform.get('id')?.value",{"_index":912,"title":{},"body":{"components/SkillsComponent.html":{}}}],["this.progressform.setvalue",{"_index":906,"title":{},"body":{"components/SkillsComponent.html":{}}}],["this.progressform.value",{"_index":911,"title":{},"body":{"components/SkillsComponent.html":{}}}],["this.progresslist",{"_index":905,"title":{},"body":{"components/SkillsComponent.html":{}}}],["this.progresslist.push(newprogressbar",{"_index":915,"title":{},"body":{"components/SkillsComponent.html":{}}}],["this.progresslist[index",{"_index":918,"title":{},"body":{"components/SkillsComponent.html":{}}}],["this.reloaddata",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["this.router.navigate",{"_index":798,"title":{},"body":{"components/PersonComponent.html":{}}}],["this.school_name.asobservable",{"_index":546,"title":{},"body":{"injectables/EducationService.html":{}}}],["this.schoolname",{"_index":762,"title":{},"body":{"components/PersonComponent.html":{}}}],["tipo",{"_index":277,"title":{},"body":{"components/AchievementsComponent.html":{}}}],["title",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{}}}],["top",{"_index":683,"title":{},"body":{"components/NotFoundComponent.html":{},"components/PersonComponent.html":{}}}],["touch",{"_index":712,"title":{},"body":{"components/PersonComponent.html":{}}}],["tree",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["true",{"_index":800,"title":{},"body":{"components/PersonComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/About.html":{},"components/AboutComponent.html":{},"injectables/AboutService.html":{},"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"interfaces/Aptitude.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"interfaces/Login.html":{},"components/NotFoundComponent.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"interfaces/Progressbar.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1000,"title":{},"body":{"index.html":{}}}],["update",{"_index":174,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["update(id",{"_index":187,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["url",{"_index":223,"title":{},"body":{"interfaces/Achievement.html":{},"components/AchievementsComponent.html":{},"interfaces/Education.html":{},"components/EducationComponent.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{}}}],["url(\"https://i.ibb.co/m2b458p/jumbotron.png",{"_index":837,"title":{},"body":{"components/PersonComponent.html":{}}}],["url_img",{"_index":465,"title":{},"body":{"interfaces/Education.html":{},"components/EducationComponent.html":{},"interfaces/Experience.html":{},"components/ExperienceComponent.html":{},"interfaces/Person.html":{},"components/PersonComponent.html":{}}}],["urlencoded",{"_index":200,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["use",{"_index":992,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["usuario",{"_index":805,"title":{},"body":{"components/PersonComponent.html":{}}}],["valid.required",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/SkillsComponent.html":{}}}],["valid[required",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/SkillsComponent.html":{}}}],["validaciones",{"_index":430,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["validators",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["validators.maxlength(100",{"_index":255,"title":{},"body":{"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{}}}],["validators.maxlength(11",{"_index":753,"title":{},"body":{"components/PersonComponent.html":{}}}],["validators.maxlength(15",{"_index":497,"title":{},"body":{"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/SkillsComponent.html":{}}}],["validators.maxlength(150",{"_index":754,"title":{},"body":{"components/PersonComponent.html":{}}}],["validators.maxlength(20",{"_index":495,"title":{},"body":{"components/EducationComponent.html":{}}}],["validators.maxlength(3",{"_index":499,"title":{},"body":{"components/EducationComponent.html":{},"components/SkillsComponent.html":{}}}],["validators.maxlength(30",{"_index":496,"title":{},"body":{"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{}}}],["validators.maxlength(40",{"_index":752,"title":{},"body":{"components/PersonComponent.html":{}}}],["validators.maxlength(50",{"_index":254,"title":{},"body":{"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["validators.maxlength(500",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{}}}],["validators.minlength(1",{"_index":498,"title":{},"body":{"components/EducationComponent.html":{},"components/SkillsComponent.html":{}}}],["validators.minlength(2",{"_index":903,"title":{},"body":{"components/SkillsComponent.html":{}}}],["validators.minlength(3",{"_index":253,"title":{},"body":{"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["validators.minlength(4",{"_index":770,"title":{},"body":{"components/PersonComponent.html":{}}}],["validators.minlength(5",{"_index":494,"title":{},"body":{"components/EducationComponent.html":{},"components/PersonComponent.html":{}}}],["validators.minlength(50",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{}}}],["validators.minlength(9",{"_index":766,"title":{},"body":{"components/PersonComponent.html":{}}}],["validators.pattern('[a",{"_index":767,"title":{},"body":{"components/PersonComponent.html":{}}}],["validators.required",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["value",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AboutService.html":{},"components/AchievementsComponent.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"injectables/AptitudeService.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"injectables/EducationService.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/PersonComponent.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{},"components/SkillsComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"components/HomeComponent.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["variable",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1034,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":977,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1004,"title":{},"body":{"index.html":{}}}],["vision",{"_index":681,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["void",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievementsComponent.html":{},"components/AppComponent.html":{},"components/AptitudesComponent.html":{},"injectables/AuthServiceService.html":{},"components/EducationComponent.html":{},"components/ExperienceComponent.html":{},"injectables/ExperienceService.html":{},"components/NotFoundComponent.html":{},"components/PersonComponent.html":{},"components/SkillsComponent.html":{}}}],["weight",{"_index":828,"title":{},"body":{"components/PersonComponent.html":{}}}],["width",{"_index":927,"title":{},"body":{"components/SkillsComponent.html":{}}}],["window.location.reload",{"_index":790,"title":{},"body":{"components/PersonComponent.html":{}}}],["www",{"_index":198,"title":{},"body":{"injectables/AboutService.html":{},"injectables/AchievementsService.html":{},"injectables/AptitudeService.html":{},"injectables/AuthServiceService.html":{},"injectables/EducationService.html":{},"injectables/ExperienceService.html":{},"injectables/PersonaService.html":{},"injectables/ProgressbarService.html":{}}}],["x",{"_index":679,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["y",{"_index":429,"title":{},"body":{"components/AptitudesComponent.html":{}}}],["z",{"_index":769,"title":{},"body":{"components/PersonComponent.html":{}}}],["za",{"_index":768,"title":{},"body":{"components/PersonComponent.html":{}}}],["zone.js",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/About.html":{"url":"interfaces/About.html","title":"interface - About","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  About\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/about.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface About {\n    id:number;\n    text: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/about/about.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aboutForm\n                            \n                            \n                                    Public\n                                aboutList\n                            \n                            \n                                isUserLogged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearForm\n                            \n                            \n                                    Private\n                                loadForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDeleteAbout\n                            \n                            \n                                    Public\n                                onEditAbout\n                            \n                            \n                                    Public\n                                onNewAbout\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                reloadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(aboutService: AboutService, formBuilder: FormBuilder, authService: AuthServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/about/about.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aboutService\n                                                  \n                                                        \n                                                                        AboutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/about/about.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadForm(about: About)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/about/about.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    about\n                                    \n                                                About\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/about/about.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeleteAbout\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteAbout(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/about/about.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onEditAbout\n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditAbout(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/about/about.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onNewAbout\n                        \n                    \n                \n            \n            \n                \n                    \n                    onNewAbout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/about/about.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/about/about.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        reloadData\n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/about/about.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aboutForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/about/about.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        aboutList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         About[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/about/about.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUserLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/about/about.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { About } from 'src/app/models/about';\nimport { AboutService } from 'src/app/services/about.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\n\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  public aboutList: About[] = [];\n  aboutForm: FormGroup;\n  isUserLogged: Boolean = false;\n\n  constructor(\n    private aboutService: AboutService,\n    private formBuilder: FormBuilder,\n    private authService: AuthServiceService\n    ) {\n    this.aboutForm = this.formBuilder.group({\n      id: [''],\n      text: ['', [Validators.required, Validators.minLength(50), Validators.maxLength(500)]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.isUserLogged = this.authService.isUserLogged();\n    this.reloadData();\n  }\n\n  private reloadData() {\n    this.aboutService.getAll().subscribe(\n      (data) => {\n        this.aboutList = data;\n      }\n    ); \n  }\n\n  private clearForm() {\n    this.aboutForm.setValue({\n      id: '',\n      text: ''\n    });\n  }\n\n  private loadForm(about: About) {\n    this.aboutForm.setValue({\n      id: about.id,\n      text: about.text\n    });\n  }\n\n  onSubmit(id: number) {\n    let about: About = this.aboutForm.value;\n    if (this.aboutForm.get('id')?.value == '') {\n      this.aboutService.save(about).subscribe(\n        (newAbout: About) => {\n          this.aboutList.push(newAbout);\n        }\n      );\n    } else {\n      this.aboutService.update(id, about).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n  public onNewAbout() {\n    this.clearForm();\n  }\n\n  public onEditAbout(index: number) {\n    let about: About = this.aboutList[index];\n    this.loadForm(about);\n  }\n\n  public onDeleteAbout(index: number) {\n    let about: About = this.aboutList[index];\n    if (confirm(\"¿Estás seguro que deseas borrar el texto seleccionado?\")) {\n      this.aboutService.delete(about.id).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        About\n        \n      \n      \n\n        \n          \n\n          \n            \n          \n          \n            \n              Close\n            \n            \n              Save changes\n            \n          \n        \n      \n    \n  \n\n \n\n\n  \n    \n      \n        Acerca de\n      \n         \n        \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              {{ item.text }}\n            \n            \n            \n              \n                \n              \n            \n            \n              \n                 \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./about.component.css\n                \n                .ng-valid[required], .ng-valid.required  {\n  border-left: 5px solid green; /* green */\n}\n\n.ng-invalid:not(form)  {\n  border-left: 5px solid red; /* red */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    About                                                                                                          Close                                      Save changes                                                               Acerca de                                                                                                         {{ item.text }}                                                                                                                                                                                               '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievementsComponent', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AptitudesComponent', 'selector': 'app-aptitudes'},{'name': 'EducationComponent', 'selector': 'app-education'},{'name': 'ExperienceComponent', 'selector': 'app-experience'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PersonComponent', 'selector': 'app-person'},{'name': 'SkillsComponent', 'selector': 'app-skills'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AboutService.html":{"url":"injectables/AboutService.html","title":"injectable - AboutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AboutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/about.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiServerUrl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getById\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/about.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/about.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/about.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/about.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(about: About)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/about.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    about\n                                    \n                                                About\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, about: About)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/about.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    about\n                                    \n                                                About\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiServerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiBaseUrl + '/about'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/about.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/about.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { About } from '../models/about'\nimport { environment } from 'src/environments/environment.prod';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AboutService {\n  public apiServerUrl = environment.apiBaseUrl + '/about';\n\n  httpOptions = {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  };\n\n  \n  constructor(private http: HttpClient) { }\n\n  public getAll(): Observable {\n    return this.http.get(`${this.apiServerUrl}/all`);  //all\n  }\n\n  public getById(id: number): Observable {\n    return this.http.get(`${this.apiServerUrl}/find/${id}`);  //byId\n  }\n\n  public save(about: About): Observable {\n    return this.http.post(`${this.apiServerUrl}/create`, about); //create\n  }\n\n  public update(id: number, about: About): Observable {\n    return this.http.put(`${this.apiServerUrl}/update/${id}`, about);  //update\n  }\n\n  public delete(id: number): Observable {\n    return this.http.delete(`${this.apiServerUrl}/delete/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Achievement.html":{"url":"interfaces/Achievement.html","title":"interface - Achievement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Achievement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/achievement.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            project_type\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        project_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        project_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Achievement {\n    id: number;\n    name: string;\n    description: string;\n    url: string;\n    project_type: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AchievementsComponent.html":{"url":"components/AchievementsComponent.html","title":"component - AchievementsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AchievementsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/achievements/achievements.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-achievements\n            \n\n\n\n            \n                styleUrls\n                ./achievements.component.css\n            \n\n\n\n            \n                templateUrl\n                ./achievements.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                achieveForm\n                            \n                            \n                                    Public\n                                achieveList\n                            \n                            \n                                isUserLogged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearForm\n                            \n                            \n                                    Private\n                                loadForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDeleteAchievement\n                            \n                            \n                                    Public\n                                onEditAchievement\n                            \n                            \n                                    Public\n                                onNewAchievement\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                reloadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(achievementService: AchievementsService, formBuilder: FormBuilder, authService: AuthServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/achievements/achievements.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        achievementService\n                                                  \n                                                        \n                                                                        AchievementsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/achievements/achievements.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadForm(achievement: Achievement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/achievements/achievements.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    achievement\n                                    \n                                                Achievement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/achievements/achievements.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeleteAchievement\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteAchievement(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/achievements/achievements.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onEditAchievement\n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditAchievement(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/achievements/achievements.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onNewAchievement\n                        \n                    \n                \n            \n            \n                \n                    \n                    onNewAchievement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/achievements/achievements.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/achievements/achievements.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        reloadData\n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/achievements/achievements.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        achieveForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/achievements/achievements.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        achieveList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Achievement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/achievements/achievements.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUserLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/achievements/achievements.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Achievement } from 'src/app/models/achievement';\nimport { AchievementsService } from 'src/app/services/achievements.service';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\n\n@Component({\n  selector: 'app-achievements',\n  templateUrl: './achievements.component.html',\n  styleUrls: ['./achievements.component.css']\n})\nexport class AchievementsComponent implements OnInit {\n  public achieveList: Achievement[] = [];\n  achieveForm: FormGroup;\n  isUserLogged: Boolean = false;\n\n\n  constructor(\n    private achievementService: AchievementsService,\n    private formBuilder: FormBuilder,\n    private authService: AuthServiceService\n  ) {\n    this.achieveForm = this.formBuilder.group({\n      id: [''],\n      name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      description: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      url: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      project_type: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]]\n    })\n  }\n  ngOnInit(): void {\n    this.isUserLogged = this.authService.isUserLogged();\n\n    this.reloadData();\n  }\n\n  private reloadData() {\n    this.achievementService.getAll().subscribe(\n      (data) => {\n        this.achieveList = data;\n      }\n    );\n  }\n\n  private clearForm() {\n    this.achieveForm.setValue({\n      id: '',\n      name: '',\n      description: '',\n      url: '',\n      project_type: '',\n    });\n  }\n\n  private loadForm(achievement: Achievement) {\n    this.achieveForm.setValue({\n      id: achievement.id,\n      name: achievement.name,\n      description: achievement.description,\n      url: achievement.url,\n      project_type: achievement.project_type\n    });\n  }\n\n  onSubmit(id: number) {\n    let achievement: Achievement = this.achieveForm.value;\n    if (this.achieveForm.get('id')?.value == '') {\n      this.achievementService.save(achievement).subscribe(\n        (newAchievement: Achievement) => {\n          this.achieveList.push(newAchievement);\n        }\n      );\n    } else {\n      this.achievementService.update(id, achievement).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n  public onNewAchievement() {\n    this.clearForm();\n  }\n\n  public onEditAchievement(index: number) {\n    let achievement: Achievement = this.achieveList[index];\n    this.loadForm(achievement);\n  }\n\n  public onDeleteAchievement(index: number) {\n    let achievement: Achievement = this.achieveList[index];\n    if (confirm(\"¿Estás seguro que deseas borrar el item seleccionado?\")) {\n      this.achievementService.delete(achievement.id).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n} \n\n    \n\n    \n        \n\n\n\n    \n        \n            \n                Logros\n                \n            \n            \n\n                \n                    \n\n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                            Close\n                        \n                        \n                            Save changes\n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        \n            \n                Logros\n            \n            \n                \n                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                            {{item.name}}\n                             Tipo de proyecto: {{item.project_type}}\n                            {{item.description}}{{item.url}}\n                        \n                        \n                            \n                                 \n                            \n                        \n                        \n                            \n                                 \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./achievements.component.css\n                \n                .ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid green;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid red;\n    /* red */\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Logros                                                                                                                                                                                                                                                                                                                                                                                                                    Close                                                                            Save changes                                                                                                                            Logros                                                                                                                                                                                                                            {{item.name}}                             Tipo de proyecto: {{item.project_type}}                            {{item.description}}{{item.url}}                                                                                                                                                                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievementsComponent', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AptitudesComponent', 'selector': 'app-aptitudes'},{'name': 'EducationComponent', 'selector': 'app-education'},{'name': 'ExperienceComponent', 'selector': 'app-experience'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PersonComponent', 'selector': 'app-person'},{'name': 'SkillsComponent', 'selector': 'app-skills'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AchievementsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AchievementsService.html":{"url":"injectables/AchievementsService.html","title":"injectable - AchievementsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AchievementsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/achievements.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiServerUrl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getById\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/achievements.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/achievements.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/achievements.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/achievements.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(achievement: Achievement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/achievements.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    achievement\n                                    \n                                                Achievement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, achievement: Achievement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/achievements.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    achievement\n                                    \n                                                Achievement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiServerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiBaseUrl + '/achievement'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/achievements.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/achievements.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Achievement } from '../models/achievement'\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AchievementsService {\n  public apiServerUrl = environment.apiBaseUrl + '/achievement';\n\n  httpOptions = {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  };\n\n\n  constructor(private http: HttpClient) { }\n\n  public getAll(): Observable {\n    return this.http.get(`${this.apiServerUrl}/all`);  //all\n  }\n\n  public getById(id: number): Observable {\n    return this.http.get(`${this.apiServerUrl}/find/${id}`);  //byId\n  }\n\n  public save(achievement: Achievement): Observable {\n    return this.http.post(`${this.apiServerUrl}/create`, achievement); //create\n  }\n\n  public update(id: number, achievement: Achievement): Observable {\n    return this.http.put(`${this.apiServerUrl}/update/${id}`, achievement);  //update\n  }\n\n  public delete(id: number): Observable {\n    return this.http.delete(`${this.apiServerUrl}/delete/${id}`);\n  }\n  \n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(baseHref: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseHref\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Portfolio-Orona-Cinthia'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { APP_BASE_HREF } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{  \n  title = 'Portfolio-Orona-Cinthia';\n\n  constructor(     \n    @Inject(APP_BASE_HREF) private baseHref: string) {\n    var a = this.baseHref;\n    console.log(a, \" is base HREF\")\n     }\n\n  ngOnInit(): void {\n  }\n}\n    \n\n    \n           \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                /* .box {\n  border: 1px solid gray;\n  margin: 5px 3px;\n} */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievementsComponent', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AptitudesComponent', 'selector': 'app-aptitudes'},{'name': 'EducationComponent', 'selector': 'app-education'},{'name': 'ExperienceComponent', 'selector': 'app-experience'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PersonComponent', 'selector': 'app-person'},{'name': 'SkillsComponent', 'selector': 'app-skills'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAchievementsComponent\n\nAchievementsComponent\n\nAppModule -->\n\nAchievementsComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAptitudesComponent\n\nAptitudesComponent\n\nAppModule -->\n\nAptitudesComponent->AppModule\n\n\n\n\n\nEducationComponent\n\nEducationComponent\n\nAppModule -->\n\nEducationComponent->AppModule\n\n\n\n\n\nExperienceComponent\n\nExperienceComponent\n\nAppModule -->\n\nExperienceComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPersonComponent\n\nPersonComponent\n\nAppModule -->\n\nPersonComponent->AppModule\n\n\n\n\n\nSkillsComponent\n\nSkillsComponent\n\nAppModule -->\n\nSkillsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AchievementsComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            AptitudesComponent\n                        \n                        \n                            EducationComponent\n                        \n                        \n                            ExperienceComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            PersonComponent\n                        \n                        \n                            SkillsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule} from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\nimport { AppComponent } from './app.component';\nimport { PersonComponent } from './components/person/person.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { ExperienceComponent } from './components/experience/experience.component';\nimport { EducationComponent } from './components/education/education.component';\nimport { AptitudesComponent } from './components/aptitudes/aptitudes.component';\nimport { AchievementsComponent } from './components/achievements/achievements.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { SkillsComponent } from './components/skills/skills.component';\n\nimport { APP_BASE_HREF } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PersonComponent,\n    AboutComponent,\n    ExperienceComponent,\n    EducationComponent,\n    AptitudesComponent,\n    AchievementsComponent,\n    HomeComponent,\n    NotFoundComponent,\n    SkillsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'home', component: HomeComponent },\n  { path: '**', redirectTo: 'home', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Aptitude.html":{"url":"interfaces/Aptitude.html","title":"interface - Aptitude","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Aptitude\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/aptitude.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            confirmerName\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmerName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Aptitude {\n    id:number;\n    name: string;\n    confirmerName: string;  \n    description: string;  \n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AptitudeService.html":{"url":"injectables/AptitudeService.html","title":"injectable - AptitudeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AptitudeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/aptitude.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiServerUrl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getById\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/aptitude.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/aptitude.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/aptitude.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/aptitude.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(aptitude: Aptitude)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/aptitude.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aptitude\n                                    \n                                                Aptitude\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, aptitude: Aptitude)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/aptitude.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aptitude\n                                    \n                                                Aptitude\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiServerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiBaseUrl + '/aptitude'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/aptitude.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/aptitude.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { Aptitude } from '../models/aptitude'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AptitudeService {\n  public apiServerUrl = environment.apiBaseUrl + '/aptitude';\n\n  httpOptions = {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  };\n\n\n  constructor(private http: HttpClient) { }\n\n  \n  public getAll(): Observable {\n    return this.http.get(`${this.apiServerUrl}/all`);  //all\n  }\n\n  public getById(id: number): Observable {\n    return this.http.get(`${this.apiServerUrl}/find/${id}`);  //byId\n  }\n\n  public save(aptitude: Aptitude): Observable {\n    return this.http.post(`${this.apiServerUrl}/create`, aptitude); //create\n  }\n\n  public update(id: number, aptitude: Aptitude): Observable {\n    return this.http.put(`${this.apiServerUrl}/update/${id}`, aptitude);  //update\n  }\n\n  public delete(id: number): Observable {\n    return this.http.delete(`${this.apiServerUrl}/delete/${id}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AptitudesComponent.html":{"url":"components/AptitudesComponent.html","title":"component - AptitudesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AptitudesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/aptitudes/aptitudes.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-aptitudes\n            \n\n\n\n            \n                styleUrls\n                ./aptitudes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./aptitudes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aptitudeForm\n                            \n                            \n                                    Public\n                                aptitudeList\n                            \n                            \n                                isUserLogged\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearForm\n                            \n                            \n                                    Private\n                                loadForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDeleteAptitude\n                            \n                            \n                                    Public\n                                onEditAptitude\n                            \n                            \n                                    Public\n                                onNewAptitude\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                reloadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(aptitudeService: AptitudeService, formBuilder: FormBuilder, authService: AuthServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/aptitudes/aptitudes.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aptitudeService\n                                                  \n                                                        \n                                                                        AptitudeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/aptitudes/aptitudes.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadForm(aptitude: Aptitude)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/aptitudes/aptitudes.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aptitude\n                                    \n                                                Aptitude\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/aptitudes/aptitudes.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeleteAptitude\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteAptitude(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/aptitudes/aptitudes.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onEditAptitude\n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditAptitude(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/aptitudes/aptitudes.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onNewAptitude\n                        \n                    \n                \n            \n            \n                \n                    \n                    onNewAptitude()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/aptitudes/aptitudes.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/aptitudes/aptitudes.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        reloadData\n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/aptitudes/aptitudes.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aptitudeForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/aptitudes/aptitudes.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        aptitudeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Aptitude[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/aptitudes/aptitudes.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUserLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/aptitudes/aptitudes.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/aptitudes/aptitudes.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Aptitude } from 'src/app/models/aptitude';\nimport { AptitudeService } from 'src/app/services/aptitude.service';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\n\n@Component({\n  selector: 'app-aptitudes',\n  templateUrl: './aptitudes.component.html',\n  styleUrls: ['./aptitudes.component.css']\n})\nexport class AptitudesComponent implements OnInit {\n  public aptitudeList: Aptitude[];\n  aptitudeForm: FormGroup;\n  isUserLogged: Boolean = false;\n\n  message: '';\n\n  constructor(\n    private aptitudeService: AptitudeService,\n    private formBuilder: FormBuilder,\n    private authService: AuthServiceService\n\n  ) {\n    this.aptitudeForm = this.formBuilder.group({\n      id: [''],\n      name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      confirmerName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      description: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]]\n    })\n  }\n\n  ngOnInit(): void {\n    this.isUserLogged = this.authService.isUserLogged();\n\n    this.reloadData();\n  }\n\n  private reloadData() {\n    this.aptitudeService.getAll().subscribe(\n      (data) => {\n        this.aptitudeList = data;\n      }\n    );\n  }\n\n  private clearForm() {\n    this.aptitudeForm.setValue({\n      id: '',\n      name: '',\n      confirmerName: '',\n      description: ''\n    });\n  }\n\n  private loadForm(aptitude: Aptitude) {\n    this.aptitudeForm.setValue({\n      id: aptitude.id,\n      name: aptitude.name,\n      confirmerName: aptitude.confirmerName,\n      description: aptitude.description\n    });\n  }\n\n  onSubmit(id: number) {\n    let aptitude: Aptitude = this.aptitudeForm.value;\n    if (this.aptitudeForm.get('id')?.value == '') {\n      this.aptitudeService.save(aptitude).subscribe(\n        (newAptitude: Aptitude) => {\n          this.aptitudeList.push(newAptitude);\n        }\n      );\n    } else {\n      this.aptitudeService.update(id, aptitude).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n  public onNewAptitude() {\n    this.clearForm();\n  }\n\n  public onEditAptitude(index: number) {\n    let aptitude: Aptitude = this.aptitudeList[index];\n    this.loadForm(aptitude);\n  }\n\n  public onDeleteAptitude(index: number) {\n    let aptitude: Aptitude = this.aptitudeList[index];\n    if (confirm(\"¿Estás seguro que deseas borrar el item seleccionado?\")) {\n      this.aptitudeService.delete(aptitude.id).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n\n}\n\n\n\n    \n\n    \n        \n\n\n\n    \n        \n            \n                Aptitudes\n                \n            \n            \n\n                \n                    \n\n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n\n                    \n                        \n                            Close\n                        \n                        \n                            Save changes\n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n        \n            \n                Aptitudes y Validaciones\n            \n            \n                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                            {{aptitude.name}}\n                            \n                                {{aptitude.description}}\n                            \n                            {{aptitude.confirmerName}}\n                        \n                        \n                            \n                                 \n                            \n                        \n                        \n                            \n                                 \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./aptitudes.component.css\n                \n                .ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid green;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid red;\n    /* red */\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Aptitudes                                                                                                                                                                                                                                                                                                                                                    Close                                                                            Save changes                                                                                                                            Aptitudes y Validaciones                                                                                                                                                                                                            {{aptitude.name}}                                                            {{aptitude.description}}                                                        {{aptitude.confirmerName}}                                                                                                                                                                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievementsComponent', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AptitudesComponent', 'selector': 'app-aptitudes'},{'name': 'EducationComponent', 'selector': 'app-education'},{'name': 'ExperienceComponent', 'selector': 'app-experience'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PersonComponent', 'selector': 'app-person'},{'name': 'SkillsComponent', 'selector': 'app-skills'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AptitudesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthServiceService.html":{"url":"injectables/AuthServiceService.html","title":"injectable - AuthServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiServerUrl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isUserLogged\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-service.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isUserLogged\n                        \n                    \n                \n            \n            \n                \n                    \n                    isUserLogged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: Login)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Login\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiServerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiBaseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-service.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-service.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { Login } from '../models/login';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n  public apiServerUrl = environment.apiBaseUrl;\n\n  httpOptions = {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  };\n\n\n  constructor(private http: HttpClient) {\n    console.log(\"El servicio de autenticación está corriendo\");\n  }\n\n  public login(credentials: Login): Observable {\n    return this.http.post(`${this.apiServerUrl}/login`, credentials).pipe(\n      tap((response: Boolean) => {\n        if (response)\n          sessionStorage.setItem(\"user\", \"cinthia\");\n      })\n    );\n  }\n\n  public logout(): void {\n    sessionStorage.removeItem(\"user\");\n  }\n\n  public isUserLogged(): boolean {\n    return sessionStorage.getItem(\"user\") !== null;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Education.html":{"url":"interfaces/Education.html","title":"interface - Education","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Education\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/education.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            career\n                                        \n                                \n                                \n                                        \n                                            dateEnd\n                                        \n                                \n                                \n                                        \n                                            dateStart\n                                        \n                                \n                                \n                                        \n                                            edu_type\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            school_name\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            url_img\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        career\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        career:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateEnd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateEnd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateStart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateStart:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edu_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edu_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_img\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_img:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Education {\n     id:number;\n     school_name: string;\n     title: string;\n     career: string;\n     url_img: string;\n     edu_type: string;\n     score: number;\n     dateStart: string;\n     dateEnd: string;\n     url: string;\n} \n\n \n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EducationComponent.html":{"url":"components/EducationComponent.html","title":"component - EducationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EducationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/education/education.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-education\n            \n\n\n\n            \n                styleUrls\n                ./education.component.css\n            \n\n\n\n            \n                templateUrl\n                ./education.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                educationList\n                            \n                            \n                                eduForm\n                            \n                            \n                                isUserLogged\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearForm\n                            \n                            \n                                    Private\n                                loadForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDeleteEducation\n                            \n                            \n                                    Public\n                                onEditEducation\n                            \n                            \n                                    Public\n                                onNewEducation\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                reloadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(educationService: EducationService, formBuilder: FormBuilder, authService: AuthServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/education/education.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        educationService\n                                                  \n                                                        \n                                                                        EducationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/education/education.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadForm(education: Education)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/education/education.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    education\n                                    \n                                                Education\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/education/education.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeleteEducation\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteEducation(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/education/education.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onEditEducation\n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditEducation(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/education/education.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onNewEducation\n                        \n                    \n                \n            \n            \n                \n                    \n                    onNewEducation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/education/education.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/education/education.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        reloadData\n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/education/education.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        educationList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Education[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/education/education.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eduForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/education/education.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUserLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/education/education.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/education/education.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Education } from 'src/app/models/education';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\nimport { EducationService } from 'src/app/services/education.service';\n\n@Component({\n  selector: 'app-education',\n  templateUrl: './education.component.html',\n  styleUrls: ['./education.component.css']\n})\nexport class EducationComponent implements OnInit {\n  public educationList: Education[];\n  eduForm: FormGroup;\n  isUserLogged: Boolean = false;\n\n  message: '';\n\n  constructor(\n    private educationService: EducationService,\n    private formBuilder: FormBuilder,\n    private authService: AuthServiceService\n\n  ) {\n    this.eduForm = this.formBuilder.group({\n      id: [''],\n      school_name: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(20)]],\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]],\n      career: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]],\n      url_img: [''],\n      edu_type: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(15)]],\n      score: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(3)]],\n      dateStart: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(15)]],\n      dateEnd: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(15)]],\n      url: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]]\n    })\n  }\n\n  ngOnInit(): void {\n    this.isUserLogged = this.authService.isUserLogged();\n\n    this.reloadData();\n  }\n\n  private reloadData() {\n    this.educationService.getAll().subscribe(\n      (data) => {\n        this.educationList = data;\n      }\n    );\n  }\n\n  private clearForm() {\n    this.eduForm.setValue({\n      id: '',\n      school_name: '',\n      title: '',\n      career: '',\n      url_img: '',\n      edu_type: '',\n      score: 0,\n      dateStart: '',\n      dateEnd: '',\n      url: ''\n    });\n  }\n\n  private loadForm(education: Education) {\n    this.eduForm.setValue({\n      id: education.id,\n      school_name: education.school_name,\n      title: education.title,\n      career: education.career,\n      url_img: education.url_img,\n      edu_type: education.edu_type,\n      score: education.score,\n      dateStart: education.dateStart,\n      dateEnd: education.dateEnd,\n      url: education.url\n    });\n  }\n\n  onSubmit(id: number) {\n    let education: Education = this.eduForm.value;\n    if (this.eduForm.get('id')?.value == '') {\n      this.educationService.save(education).subscribe(\n        (newEducation: Education) => {\n          this.educationList.push(newEducation);\n        }\n      );\n    } else {\n      this.educationService.update(id, education).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n  public onNewEducation() {\n    this.clearForm();\n  }\n\n  public onEditEducation(index: number) {\n    let education: Education = this.educationList[index];\n    this.loadForm(education);\n  }\n\n  public onDeleteEducation(index: number) {\n    let education: Education = this.educationList[index];\n    if (confirm(\"¿Estás seguro que deseas borrar el item seleccionado?\")) {\n      this.educationService.delete(education.id).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n\n\n\n    \n        \n            \n                Educación\n                \n            \n            \n                \n                    \n\n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                            Close\n                        \n                        \n                            Save changes\n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n        \n            \n                Educación\n            \n            \n                \n                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                            \n                        \n                        \n                             {{edu.school_name}} \n                             {{edu.title}}, {{edu.career}},\n                                {{edu.score}} {{edu.dateStart}}  - \n                                    {{edu.dateEnd}} {{edu.edu_type}}  {{edu.url}}\n                        \n                        \n                            \n                                 \n                            \n                        \n                        \n                            \n                                 \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./education.component.css\n                \n                .ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid green;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid red;\n    /* red */\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Educaciónlose                                                                            Save changes                                                                                                                            Educación                                                                                                                                                                                                                                                                                                         {{edu.school_name}}                              {{edu.title}}, {{edu.career}},                                {{edu.score}} {{edu.dateStart}}  -                                     {{edu.dateEnd}} {{edu.edu_type}}  {{edu.url}}                                                                                                                                                                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievementsComponent', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AptitudesComponent', 'selector': 'app-aptitudes'},{'name': 'EducationComponent', 'selector': 'app-education'},{'name': 'ExperienceComponent', 'selector': 'app-experience'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PersonComponent', 'selector': 'app-person'},{'name': 'SkillsComponent', 'selector': 'app-skills'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EducationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EducationService.html":{"url":"injectables/EducationService.html","title":"injectable - EducationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EducationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/education.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiServerUrl\n                            \n                            \n                                currentImage\n                            \n                            \n                                currentSchool_name\n                            \n                            \n                                    Private\n                                edu_image\n                            \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                school_name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getById\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/education.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/education.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/education.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/education.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(education: Education)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/education.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    education\n                                    \n                                                Education\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, education: Education)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/education.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    education\n                                    \n                                                Education\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiServerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiBaseUrl + '/education'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/education.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentImage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.edu_image.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/education.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSchool_name\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.school_name.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/education.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        edu_image\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('https://i.ibb.co/9VhmqQ9/uba.png')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/education.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/education.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('Universidad de Buenos Aires')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/education.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { Education } from '../models/education'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EducationService {\n  public apiServerUrl = environment.apiBaseUrl + '/education';\n\n  httpOptions = {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  };\n\n\n  //prueba interpolación de educacion a persona\n  private school_name = new BehaviorSubject('Universidad de Buenos Aires');\n  private edu_image = new BehaviorSubject('https://i.ibb.co/9VhmqQ9/uba.png');\n  currentSchool_name = this.school_name.asObservable(); \n  currentImage = this.edu_image.asObservable();\n\n  \n  constructor(private http: HttpClient) { }\n\n  public getAll(): Observable {\n    return this.http.get(`${this.apiServerUrl}/all`);  //all\n  }\n\n  public getById(id: number): Observable {\n    return this.http.get(`${this.apiServerUrl}/find/${id}`);  //byId\n  }\n\n  public save(education: Education): Observable {\n    return this.http.post(`${this.apiServerUrl}/create`, education); //create\n  }\n\n  public update(id: number, education: Education): Observable {\n    return this.http.put(`${this.apiServerUrl}/update/${id}`, education);  //update\n  }\n\n  public delete(id: number): Observable {\n    return this.http.delete(`${this.apiServerUrl}/delete/${id}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Experience.html":{"url":"interfaces/Experience.html","title":"interface - Experience","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Experience\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/experience.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            company_name\n                                        \n                                \n                                \n                                        \n                                            dateEnd\n                                        \n                                \n                                \n                                        \n                                            dateStart\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            job_position\n                                        \n                                \n                                \n                                        \n                                            job_type\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            url_img\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        company_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateEnd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateEnd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateStart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateStart:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        job_position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        job_position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        job_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        job_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_img\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_img:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Experience {\n     id:number;\n     job_position: string \n     company_name: string \n     url_img: string \n     job_type: string \n     dateStart: string \n     dateEnd: string \n     url: string\n\n\n    \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExperienceComponent.html":{"url":"components/ExperienceComponent.html","title":"component - ExperienceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExperienceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/experience/experience.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-experience\n            \n\n\n\n            \n                styleUrls\n                ./experience.component.css\n            \n\n\n\n            \n                templateUrl\n                ./experience.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                experienceList\n                            \n                            \n                                expForm\n                            \n                            \n                                isUserLogged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearForm\n                            \n                            \n                                    Private\n                                loadForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteExperience\n                            \n                            \n                                onEditExperience\n                            \n                            \n                                onNewExperience\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                reloadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(experienceService: ExperienceService, formBuilder: FormBuilder, authService: AuthServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/experience/experience.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        experienceService\n                                                  \n                                                        \n                                                                        ExperienceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/experience/experience.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadForm(experience: Experience)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/experience/experience.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    experience\n                                    \n                                                Experience\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/experience/experience.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteExperience\n                        \n                    \n                \n            \n            \n                \nonDeleteExperience(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/experience/experience.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditExperience\n                        \n                    \n                \n            \n            \n                \nonEditExperience(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/experience/experience.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNewExperience\n                        \n                    \n                \n            \n            \n                \nonNewExperience()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/experience/experience.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/experience/experience.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        reloadData\n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/experience/experience.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        experienceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Experience[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/experience/experience.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/experience/experience.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUserLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/experience/experience.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Experience } from 'src/app/models/experience';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\nimport { ExperienceService } from 'src/app/services/experience.service';\n\n@Component({\n  selector: 'app-experience',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.css'],\n})\nexport class ExperienceComponent implements OnInit {\n  public experienceList: Experience[];\n  expForm: FormGroup;\n  isUserLogged: Boolean = false;\n\n  constructor(\n    private experienceService: ExperienceService,\n    private formBuilder: FormBuilder,\n    private authService: AuthServiceService\n\n  ) {\n    this.expForm = this.formBuilder.group({\n      id: [''],\n      job_position: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]],\n      company_name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]],\n      url_img: [''],\n      job_type: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]],\n      dateStart: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(15)]],\n      dateEnd: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(15)]],\n      url: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]]\n    })\n  }\n\n  ngOnInit(): any {\n    this.isUserLogged = this.authService.isUserLogged();\n    this.reloadData();\n  }\n\n  private reloadData() {\n    this.experienceService.getAll().subscribe(\n      (data) => {\n        this.experienceList = data;\n      }\n    );\n  }\n\n  private clearForm() {\n    this.expForm.setValue({\n      id: '',\n      job_position: '',\n      company_name: '',\n      url_img: '',\n      job_type: '',\n      dateStart: '',\n      dateEnd: '',\n      url: ''\n    });\n  }\n\n  private loadForm(experience: Experience) {\n    this.expForm.setValue({\n      id: experience.id,\n      job_position: experience.job_position,\n      company_name: experience.company_name,\n      url_img: experience.url_img,\n      job_type: experience.job_type,\n      dateStart: experience.dateStart,\n      dateEnd: experience.dateEnd,\n      url: experience.url\n    });\n  }\n\n  onSubmit(id: number) {\n    let experience: Experience = this.expForm.value;\n    if (this.expForm.get('id')?.value == '') {\n      this.experienceService.save(experience).subscribe(\n        (newExperience: Experience) => {\n          this.experienceList.push(newExperience);\n        }\n      );\n    } else {\n      this.experienceService.update(id, experience).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n  onNewExperience() {\n    this.clearForm();\n  }\n\n  onEditExperience(index: number) {\n    let experience: Experience = this.experienceList[index];\n    this.loadForm(experience);\n  }\n\n  onDeleteExperience(index: number) {\n    let experience: Experience = this.experienceList[index];\n    if (confirm(\"¿Estás seguro que deseas borrar el item seleccionado?\")) {\n      this.experienceService.delete(experience.id).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n\n}\n\n\n\n    \n\n    \n        \n\n\n\n    \n        \n            \n                Experiencia\n                \n            \n            \n\n                \n                    \n\n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                            Close\n                        \n                        \n                            Save changes\n                        \n                    \n                \n            \n        \n    \n\n \n\n    \n        \n            \n                Experiencia\n            \n            \n                \n                    \n                \n            \n        \n        \n            \n            \n                \n                    \n                        \n                            \n                        \n                        \n                            {{exp.job_position}} \n                            {{exp.company_name}} -\n                                {{exp.job_type}} {{exp.dateStart}}  - {{exp.dateEnd}}\n                            {{exp.url}}\n                        \n                        \n                            \n                                 \n                            \n                        \n                        \n                            \n                                 \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./experience.component.css\n                \n                .ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid green;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid red;\n    /* red */\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Experiencialose                                                                            Save changes                                                                                                                             Experiencia                                                                                                                                                                                                                                                                                                    {{exp.job_position}}                             {{exp.company_name}} -                                {{exp.job_type}} {{exp.dateStart}}  - {{exp.dateEnd}}                            {{exp.url}}                                                                                                                                                                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievementsComponent', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AptitudesComponent', 'selector': 'app-aptitudes'},{'name': 'EducationComponent', 'selector': 'app-education'},{'name': 'ExperienceComponent', 'selector': 'app-experience'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PersonComponent', 'selector': 'app-person'},{'name': 'SkillsComponent', 'selector': 'app-skills'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExperienceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExperienceService.html":{"url":"injectables/ExperienceService.html","title":"injectable - ExperienceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExperienceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/experience.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiServerUrl\n                            \n                            \n                                    Private\n                                company_name\n                            \n                            \n                                currentCompany_name\n                            \n                            \n                                currentImage\n                            \n                            \n                                currentPosition\n                            \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                job_image\n                            \n                            \n                                    Private\n                                position\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeCompany_name\n                            \n                            \n                                changeJob_image\n                            \n                            \n                                changePosition\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getById\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/experience.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeCompany_name\n                        \n                    \n                \n            \n            \n                \nchangeCompany_name(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/experience.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeJob_image\n                        \n                    \n                \n            \n            \n                \nchangeJob_image(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/experience.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePosition\n                        \n                    \n                \n            \n            \n                \nchangePosition(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/experience.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/experience.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/experience.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/experience.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(experience: Experience)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/experience.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    experience\n                                    \n                                                Experience\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, experience: Experience)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/experience.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    experience\n                                    \n                                                Experience\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiServerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiBaseUrl + '/experience'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/experience.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        company_name\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('CONICET')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/experience.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentCompany_name\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.company_name.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/experience.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentImage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.job_image.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/experience.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPosition\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.position.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/experience.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/experience.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        job_image\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('https://i.ibb.co/KqhtbVw/conicet.png')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/experience.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('Informático')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/experience.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Experience } from '../models/experience'\nimport { environment } from 'src/environments/environment.prod';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExperienceService {\n  public apiServerUrl = environment.apiBaseUrl + '/experience';\n\n  httpOptions = {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  };\n\n\n  //prueba interpolacion de eXperiencia a persona\n  private job_image = new BehaviorSubject('https://i.ibb.co/KqhtbVw/conicet.png');\n  private company_name = new BehaviorSubject('CONICET');\n  private position = new BehaviorSubject('Informático');\n  currentCompany_name = this.company_name.asObservable(); \n  currentPosition = this.position.asObservable(); \n  currentImage = this.job_image.asObservable();\n\n\n  constructor(private http: HttpClient) { }\n\n  public getAll(): Observable {\n    return this.http.get(`${this.apiServerUrl}/all`);  //all\n  }\n\n  public getById(id: number): Observable {\n    return this.http.get(`${this.apiServerUrl}/find/${id}`);  //byId\n  }\n\n  public save(experience: Experience): Observable {\n    return this.http.post(`${this.apiServerUrl}/create`, experience); //create\n  }\n\n  public update(id: number, experience: Experience): Observable {\n    return this.http.put(`${this.apiServerUrl}/update/${id}`, experience);  //update\n  }\n\n  public delete(id: number): Observable {\n    return this.http.delete(`${this.apiServerUrl}/delete/${id}`);\n  }\n\n  //Methods\n  changeCompany_name(value: any){\n    this.company_name.next(value);\n  }\n\n  changePosition(value: any){\n    this.position.next(value);\n  }\n  \n  changeJob_image(value: any){\n    this.job_image.next(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent{}\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievementsComponent', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AptitudesComponent', 'selector': 'app-aptitudes'},{'name': 'EducationComponent', 'selector': 'app-education'},{'name': 'ExperienceComponent', 'selector': 'app-experience'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PersonComponent', 'selector': 'app-person'},{'name': 'SkillsComponent', 'selector': 'app-skills'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Login.html":{"url":"interfaces/Login.html","title":"interface - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/login.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Login {\n    email: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/not-found/not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n\n\n            \n                styleUrls\n                ./not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/not-found/not-found.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/not-found/not-found.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Página no encontrada.\n    We couldn't find that page! Not even with x-ray vision.\n\n\n    \n\n    \n                \n                    ./not-found.component.css\n                \n                .estilo {\n    margin-top: 10em;   \n    margin-left: 10em;\n    margin-bottom: 5em; \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Página no encontrada.    We couldn\\'t find that page! Not even with x-ray vision.'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievementsComponent', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AptitudesComponent', 'selector': 'app-aptitudes'},{'name': 'EducationComponent', 'selector': 'app-education'},{'name': 'ExperienceComponent', 'selector': 'app-experience'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PersonComponent', 'selector': 'app-person'},{'name': 'SkillsComponent', 'selector': 'app-skills'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Person.html":{"url":"interfaces/Person.html","title":"interface - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/person.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            cuit\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interest\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            url_img\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cuit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cuit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interest:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_img\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_img:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Person {\n    id:number;\n    name: string;\n    lastname: string;\n    cuit: number;\n    url_img: string; \n    interest: string; \n    birthday: string;\n    location: string; \n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonComponent.html":{"url":"components/PersonComponent.html","title":"component - PersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/person/person.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-person\n            \n\n\n\n            \n                styleUrls\n                ./person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./person.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyName\n                            \n                            \n                                eduImage\n                            \n                            \n                                expImage\n                            \n                            \n                                expPosition\n                            \n                            \n                                isUserLogged\n                            \n                            \n                                loginError\n                            \n                            \n                                loginForm\n                            \n                            \n                                personForm\n                            \n                            \n                                    Public\n                                personList\n                            \n                            \n                                schoolName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Private\n                                clearForm\n                            \n                            \n                                    Private\n                                loadForm\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDeletePerson\n                            \n                            \n                                    Public\n                                onEditPerson\n                            \n                            \n                                    Public\n                                onNewPerson\n                            \n                            \n                                    Public\n                                onSub\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                reloadData\n                            \n                            \n                                touch\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Email\n                                \n                                \n                                    Password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(personaService: PersonaService, educationService: EducationService, experienceService: ExperienceService, formBuilder: FormBuilder, authService: AuthServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/person/person.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personaService\n                                                  \n                                                        \n                                                                        PersonaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        educationService\n                                                  \n                                                        \n                                                                        EducationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        experienceService\n                                                  \n                                                        \n                                                                        ExperienceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadForm(person: Person)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    person\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeletePerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeletePerson(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onEditPerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditPerson(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onNewPerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    onNewPerson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSub\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSub(e: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        reloadData\n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        touch\n                        \n                    \n                \n            \n            \n                \ntouch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/person/person.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/person/person.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eduImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/person/person.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/person/person.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/person/person.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUserLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/person/person.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/person/person.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/person/person.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/person/person.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        personList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Person[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/person/person.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/person/person.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Email\n                    \n                \n\n                \n                    \n                        getEmail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/person/person.component.ts:176\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Password\n                    \n                \n\n                \n                    \n                        getPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/person/person.component.ts:179\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Person } from 'src/app/models/person';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\nimport { EducationService } from 'src/app/services/education.service';\nimport { ExperienceService } from 'src/app/services/experience.service';\nimport { PersonaService } from 'src/app/services/person.service';\n\n@Component({\n  selector: 'app-person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.css']\n\n})\nexport class PersonComponent implements OnInit {\n  public personList: Person[];\n  personForm: FormGroup;\n  loginForm: FormGroup;\n  loginError: boolean = false;\n  isUserLogged: Boolean = false;\n\n\n  //Import experience and education.\n  companyName: string;\n  expPosition: string;\n  expImage: string;\n  schoolName: string;\n  eduImage: string;\n\n  constructor(\n    private personaService: PersonaService,\n    private educationService: EducationService,\n    private experienceService: ExperienceService,\n    private formBuilder: FormBuilder,\n    private authService: AuthServiceService,\n    private router: Router\n    \n\n  ) {\n    this.personForm = this.formBuilder.group({\n      id: [''],\n      name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      lastname: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(40)]],\n      cuit: ['', [Validators.required, Validators.maxLength(11)]],\n      url_img: ['', [Validators.required, Validators.maxLength(150)]],\n      interest: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(100)]],\n      birthday: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(50)]],\n      location: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(30)]]\n    }),\n      this.experienceService.currentCompany_name.subscribe(data => {\n        this.companyName = data;\n      }),\n      this.experienceService.currentPosition.subscribe(data => {\n        this.expPosition = data;\n      }),\n      this.experienceService.currentImage.subscribe(data => {\n        this.expImage = data;\n      }),\n      this.educationService.currentSchool_name.subscribe(data => {\n        this.schoolName = data;\n      }),\n      this.educationService.currentImage.subscribe(data => {\n        this.eduImage = data;\n      });\n\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.minLength(9), Validators.pattern('[a-zA-Z/@]*')]],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.pattern('[a-zA-Z/@]*')]]\n    });\n\n  }\n\n  ngOnInit(): void {\n    this.isUserLogged = this.authService.isUserLogged();\n    this.reloadData();\n  }\n\n  private reloadData() {\n    this.personaService.getAll().subscribe(\n      (data) => {\n        this.personList = data;\n      }\n    );\n  }\n\n  private clearForm() {\n    this.personForm.setValue({\n      id: '',\n      name: '',\n      lastname: '',\n      cuit: 0,\n      url_img: '',\n      interest: '',\n      birthday: '',\n      location: '',\n    });\n  }\n\n  private loadForm(person: Person) {\n    this.personForm.setValue({\n      id: person.id,\n      name: person.name,\n      lastname: person.lastname,\n      cuit: person.cuit,\n      url_img: person.url_img,\n      interest: person.interest,\n      birthday: person.birthday,\n      location: person.location,\n    });\n  }\n\n  onSubmit(id: number) {\n    let person: Person = this.personForm.value;\n    if (this.personForm.get('id')?.value == '') {\n      this.personaService.save(person).subscribe(\n        (newPerson: Person) => {\n          this.personList.push(newPerson);\n        }\n      );\n    } else {\n      this.personaService.update(id, person).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n  logout(): void {\n    this.authService.logout();\n    window.location.reload();\n  }\n\n\n  public onNewPerson() {\n    this.clearForm();\n  }\n\n  public onEditPerson(index: number) {\n    let person: Person = this.personList[index];\n    this.loadForm(person);\n  }\n\n  public onDeletePerson(index: number) {\n    let person: Person = this.personList[index];\n    if (confirm(\"¿Estás seguro que deseas borrar el texto seleccionado?\")) {\n      this.personaService.delete(person.id).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n  /*Login Configuration */\n\n  touch() {\n    console.log(\"Tocastes login!\");\n  }\n\n  public onSub(e: Event) {\n    e.preventDefault();\n    this.authService.login(this.loginForm.value).subscribe(\n      (response: Boolean) => {\n        if (response) {\n          this.router.navigate(['/']);\n          window.location.reload();\n        }\n        else\n          this.loginError = true;\n        console.log(\"No se pudo encontrar el usuario en la base de datos\");\n      }\n    );\n  }\n  get Email() {\n    return this.loginForm.get('email');\n  }\n  get Password() {\n    return this.loginForm.get('password');\n  }\n\n  clear(): void {\n    this.loginForm.setValue({\n      email: '',\n      password: ''\n    });\n    this.loginError = false;\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n            \n                Bienvenido\n                \n            \n            \n                \n                    \n                        Email\n                        \n                        El email es\n                            requerido.\n                    \n                    \n                        Password\n                        \n                        La contraseña es\n                            requerida.\n                    \n                    \n                        \n                            Limpiar\n                        \n                        \n                            Iniciar Sesión\n                        \n                        \n                            Cancelar\n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        \n            \n                Persona\n                \n            \n            \n                \n                    \n\n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                            Close\n                        \n                        \n                            Save changes\n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        \n            \n        \n        \n             \n        \n        \n            \n                \n            \n            \n                \n            \n            \n                \n            \n        \n        \n            \n                \n                    Login \n            \n        \n        \n            \n                \n                    Logout\n                \n            \n        \n    \n\n\n\n    \n        \n            \n                \n            \n        \n    \n\n\n\n    \n        \n            \n                {{item.name}}&nbsp;&nbsp;{{item.lastname}}\n                \n                    \n                        \n                            \n                            \n                        \n                        \n                            {{companyName}}\n                        \n                    \n                \n            \n            \n                {{expPosition}} del {{companyName}}\n                \n                    \n                        \n                            \n                            \n                        \n                        \n                            {{schoolName}}\n                        \n                    \n                \n            \n        \n        \n            \n                {{item.location}} &nbsp;Información de\n                    contacto\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./person.component.css\n                \n                h3 {\n    font-weight: bolder;\n    font-family: 'Poppins', sans-serif;\n}\n.jumbotron {\n    background-image: url(\"https://i.ibb.co/M2B458P/jumbotron.png\");\n    height: 50vh;\n    margin-top: 5vh;\n    background-size: cover;\n    display: flex;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Bienvenido                                                                                                    Email                                                El email es                            requerido.                                                                Password                                                La contraseña es                            requerida.                                                                                            Limpiar                                                                            Iniciar Sesión                                                                            Cancelar                                                                                                                            Personalose                                                                            Save changes                                                                                                                                                                                                                                                                                                                                                 Login                                                                             Logout                                                                                                                                                {{item.name}}  {{item.lastname}}                                                                                                                                                                                                {{companyName}}                                                                                                    {{expPosition}} del {{companyName}}                                                                                                                                                                                                {{schoolName}}                                                                                                                    {{item.location}}  Información de                    contacto                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievementsComponent', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AptitudesComponent', 'selector': 'app-aptitudes'},{'name': 'EducationComponent', 'selector': 'app-education'},{'name': 'ExperienceComponent', 'selector': 'app-experience'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PersonComponent', 'selector': 'app-person'},{'name': 'SkillsComponent', 'selector': 'app-skills'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonaService.html":{"url":"injectables/PersonaService.html","title":"injectable - PersonaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/person.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiServerUrl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getById\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/person.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/person.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/person.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/person.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(person: Person)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/person.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    person\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, person: Person)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/person.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    person\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiServerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiBaseUrl + '/person'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/person.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/person.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { Person } from '../models/person'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonaService {\n  public apiServerUrl = environment.apiBaseUrl + '/person';\n  \n  httpOptions = {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  };\n\n\n  constructor(private http: HttpClient) { }\n\n  public getAll(): Observable {\n    return this.http.get(`${this.apiServerUrl}/all`);  //all\n  }\n\n  public getById(id: number): Observable {\n    return this.http.get(`${this.apiServerUrl}/find/${id}`);  //byId\n  }\n\n  public save(person: Person): Observable {\n    return this.http.post(`${this.apiServerUrl}/create`, person); //create\n  }\n\n  public update(id: number, person: Person): Observable {\n    return this.http.put(`${this.apiServerUrl}/update/${id}`, person);  //update\n  }\n\n  public delete(id: number): Observable {\n    return this.http.delete(`${this.apiServerUrl}/delete/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Progressbar.html":{"url":"interfaces/Progressbar.html","title":"interface - Progressbar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Progressbar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/progressbar.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            number\n                                        \n                                \n                                \n                                        \n                                            quote\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quote\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quote:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Progressbar{\n    id:number;\n    name:string;\n    quote:string;\n    number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProgressbarService.html":{"url":"injectables/ProgressbarService.html","title":"injectable - ProgressbarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProgressbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/progressbar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiServerUrl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getById\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/progressbar.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/progressbar.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/progressbar.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/progressbar.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(progressbar: Progressbar)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/progressbar.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    progressbar\n                                    \n                                                Progressbar\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, progressbar: Progressbar)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/progressbar.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    progressbar\n                                    \n                                                Progressbar\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiServerUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiBaseUrl + '/progress'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/progressbar.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/progressbar.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Progressbar } from '../models/progressbar'\nimport { environment } from 'src/environments/environment.prod';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProgressbarService {\n  public apiServerUrl = environment.apiBaseUrl + '/progress';\n\n  httpOptions = {\n    headers: new HttpHeaders().set('Content-Type', 'application/json')\n      .set('Content-Type', 'application/x-www-form-urlencoded')\n  };\n\n\n  constructor(private http: HttpClient) { }\n\n  public getAll(): Observable {\n    return this.http.get(`${this.apiServerUrl}/all`);  //all\n  }\n\n  public getById(id: number): Observable {\n    return this.http.get(`${this.apiServerUrl}/find/${id}`);  //byId\n  }\n\n  public save(progressbar: Progressbar): Observable {\n    return this.http.post(`${this.apiServerUrl}/create`, progressbar); //create\n  }\n\n  public update(id: number, progressbar: Progressbar): Observable {\n    return this.http.put(`${this.apiServerUrl}/update/${id}`, progressbar);  //update\n  }\n\n  public delete(id: number): Observable {\n    return this.http.delete(`${this.apiServerUrl}/delete/${id}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SkillsComponent.html":{"url":"components/SkillsComponent.html","title":"component - SkillsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SkillsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/skills/skills.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-skills\n            \n\n\n\n            \n                styleUrls\n                ./skills.component.css\n            \n\n\n\n            \n                templateUrl\n                ./skills.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isUserLogged\n                            \n                            \n                                message\n                            \n                            \n                                progressForm\n                            \n                            \n                                    Public\n                                progressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearForm\n                            \n                            \n                                    Private\n                                loadForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDeleteProgressbar\n                            \n                            \n                                    Public\n                                onEditProgressbar\n                            \n                            \n                                    Public\n                                onNewProgressbar\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                reloadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(progressbarService: ProgressbarService, formBuilder: FormBuilder, authService: AuthServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/skills/skills.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        progressbarService\n                                                  \n                                                        \n                                                                        ProgressbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/skills/skills.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadForm(progressbar: Progressbar)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/skills/skills.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    progressbar\n                                    \n                                                Progressbar\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/skills/skills.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeleteProgressbar\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteProgressbar(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/skills/skills.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onEditProgressbar\n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditProgressbar(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/skills/skills.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onNewProgressbar\n                        \n                    \n                \n            \n            \n                \n                    \n                    onNewProgressbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/skills/skills.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/skills/skills.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        reloadData\n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/skills/skills.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isUserLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/skills/skills.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/skills/skills.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        progressForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/skills/skills.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        progressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Progressbar[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/skills/skills.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Progressbar } from 'src/app/models/progressbar';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\nimport { ProgressbarService } from 'src/app/services/progressbar.service';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.css'],\n})\nexport class SkillsComponent implements OnInit {\n  public progressList: Progressbar[];\n  progressForm: FormGroup;\n  isUserLogged: Boolean = false;\n\n  message: '';\n\n  constructor(\n    private progressbarService: ProgressbarService,\n    private formBuilder: FormBuilder,\n    private authService: AuthServiceService\n\n  ) {\n    this.progressForm = this.formBuilder.group({\n      id: [''],\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(15)]],\n      quote: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      number: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(3)]]\n    });\n  }\n\n\n  ngOnInit(): void {\n    this.isUserLogged = this.authService.isUserLogged();\n\n    this.reloadData();\n  }\n\n  private reloadData() {\n    this.progressbarService.getAll().subscribe(\n      (data) => {\n        this.progressList = data;\n      }\n    );\n  }\n\n  private clearForm() {\n    this.progressForm.setValue({\n      id: '',\n      name: '',\n      quote: '',\n      number: 0\n    });\n  }\n\n  private loadForm(progressbar: Progressbar) {\n    this.progressForm.setValue({\n      id: progressbar.id,\n      name: progressbar.name,\n      quote: progressbar.quote,\n      number: progressbar.number\n    });\n  }\n\n  onSubmit(id: number) {\n    let progressbar: Progressbar = this.progressForm.value;\n    if (this.progressForm.get('id')?.value == '') {\n      this.progressbarService.save(progressbar).subscribe(\n        (newProgressbar: Progressbar) => {\n          this.progressList.push(newProgressbar);\n        }\n      );\n    } else {\n      this.progressbarService.update(id, progressbar).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n  public onNewProgressbar() {\n    this.clearForm();\n  }\n\n  public onEditProgressbar(index: number) {\n    let progressbar: Progressbar = this.progressList[index];\n    this.loadForm(progressbar);\n  }\n\n  public onDeleteProgressbar(index: number) {\n    let progressbar: Progressbar = this.progressList[index];\n    if (confirm(\"¿Estás seguro que deseas borrar el item seleccionado?\")) {\n      this.progressbarService.delete(progressbar.id).subscribe(\n        () => {\n          this.reloadData();\n        }\n      )\n    }\n  }\n\n\n}\n\n\n\n\n\n    \n\n    \n        \n\n\n    \n        \n            \n                Habilidades\n                \n            \n            \n\n                \n                    \n\n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n\n                    \n                        \n                            Close\n                        \n                        \n                            Save changes\n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n        \n            \n                Progresos adquiridos\n            \n            \n                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                            \n                                 {{item.name}} \n                                \n                                     {{item.number}}\n                                \n                                \n                                 {{item.quote}} \n\n                            \n                        \n                        \n                        \n                            \n                                \n                            \n                        \n                        \n                            \n                                \n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./skills.component.css\n                \n                .progress {\n    margin-bottom: 1rem;\n    width: 50rem;\n}\n\n.ng-valid[required],\n.ng-valid.required {\n    border-left: 5px solid green;\n    /* green */\n}\n\n.ng-invalid:not(form) {\n    border-left: 5px solid red;\n    /* red */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Habilidades                                                                                                                                                                                                                                                                                                                                                    Close                                                                            Save changes                                                                                                                            Progresos adquiridos                                                                                                                                                                                                                                             {{item.name}}                                                                      {{item.number}}                                                                                                 {{item.quote}}                                                                                                                                                                                                                                                                                                                                                                                                                         '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievementsComponent', 'selector': 'app-achievements'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AptitudesComponent', 'selector': 'app-aptitudes'},{'name': 'EducationComponent', 'selector': 'app-education'},{'name': 'ExperienceComponent', 'selector': 'app-experience'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PersonComponent', 'selector': 'app-person'},{'name': 'SkillsComponent', 'selector': 'app-skills'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SkillsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/achievements/achievements.component.ts\n            \n            component\n            AchievementsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/aptitudes/aptitudes.component.ts\n            \n            component\n            AptitudesComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/education/education.component.ts\n            \n            component\n            EducationComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/experience/experience.component.ts\n            \n            component\n            ExperienceComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/person/person.component.ts\n            \n            component\n            PersonComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/components/skills/skills.component.ts\n            \n            component\n            SkillsComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/models/about.ts\n            \n            interface\n            About\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/achievement.ts\n            \n            interface\n            Achievement\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/aptitude.ts\n            \n            interface\n            Aptitude\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/education.ts\n            \n            interface\n            Education\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/experience.ts\n            \n            interface\n            Experience\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/login.ts\n            \n            interface\n            Login\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/person.ts\n            \n            interface\n            Person\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/progressbar.ts\n            \n            interface\n            Progressbar\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/about.service.ts\n            \n            injectable\n            AboutService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/achievements.service.ts\n            \n            injectable\n            AchievementsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/aptitude.service.ts\n            \n            injectable\n            AptitudeService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/auth-service.service.ts\n            \n            injectable\n            AuthServiceService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/education.service.ts\n            \n            injectable\n            EducationService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/experience.service.ts\n            \n            injectable\n            ExperienceService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/services/person.service.ts\n            \n            injectable\n            PersonaService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/progressbar.service.ts\n            \n            injectable\n            ProgressbarService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.1.0\n        \n            @angular/common : ~13.1.0\n        \n            @angular/compiler : ~13.1.0\n        \n            @angular/core : ~13.1.0\n        \n            @angular/forms : ~13.1.0\n        \n            @angular/platform-browser : ~13.1.0\n        \n            @angular/platform-browser-dynamic : ~13.1.0\n        \n            @angular/router : ~13.1.0\n        \n            json-server : ^0.17.0\n        \n            ngx-cookie-service : ^13.2.1\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProyectocv\nThis project was generated with Angular CLI version 13.1.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to https://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAchievementsComponent\n\nAchievementsComponent\n\nAppModule -->\n\nAchievementsComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAptitudesComponent\n\nAptitudesComponent\n\nAppModule -->\n\nAptitudesComponent->AppModule\n\n\n\n\n\nEducationComponent\n\nEducationComponent\n\nAppModule -->\n\nEducationComponent->AppModule\n\n\n\n\n\nExperienceComponent\n\nExperienceComponent\n\nAppModule -->\n\nExperienceComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPersonComponent\n\nPersonComponent\n\nAppModule -->\n\nPersonComponent->AppModule\n\n\n\n\n\nSkillsComponent\n\nSkillsComponent\n\nAppModule -->\n\nSkillsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiBaseUrl: 'https://orona-portfoliobackend.herokuapp.com'\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiBaseUrl: 'https://orona-portfoliobackend.herokuapp.com'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
